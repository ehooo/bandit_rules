{
  "errors": [
    {
      "filename": "examples/new_candidates-none.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "examples/nonsense.py",
      "reason": "syntax error while parsing AST from file"
    },
    {
      "filename": "examples/nonsense2.py",
      "reason": "exception while scanning file"
    },
    {
      "filename": "examples/sql_statements-py36.py",
      "reason": "syntax error while parsing AST from file"
    }
  ],
  "generated_at": "2019-03-19T09:18:54Z",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 389,
      "CONFIDENCE.LOW": 9,
      "CONFIDENCE.MEDIUM": 80,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 111,
      "SEVERITY.LOW": 141,
      "SEVERITY.MEDIUM": 226,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1124,
      "nosec": 21
    },
    "examples/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0
    },
    "examples/assert.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1,
      "nosec": 0
    },
    "examples/binding.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 4,
      "nosec": 0
    },
    "examples/cipher-modes.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 5,
      "nosec": 0
    },
    "examples/ciphers.py": {
      "CONFIDENCE.HIGH": 27,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 26,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 68,
      "nosec": 0
    },
    "examples/crypto-md5.py": {
      "CONFIDENCE.HIGH": 23,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 8,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 15,
      "SEVERITY.UNDEFINED": 0,
      "loc": 25,
      "nosec": 0
    },
    "examples/dill.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0
    },
    "examples/django_sql_injection_extra.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 11,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 11,
      "SEVERITY.UNDEFINED": 0,
      "loc": 25,
      "nosec": 0
    },
    "examples/django_sql_injection_raw.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 4,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0
    },
    "examples/eval.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0
    },
    "examples/exec-py2.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 2,
      "nosec": 0
    },
    "examples/exec-py3.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1,
      "nosec": 0
    },
    "examples/flask_debug.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 11,
      "nosec": 0
    },
    "examples/ftplib.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 2,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 6,
      "nosec": 0
    },
    "examples/hardcoded-passwords.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 12,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 12,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 22,
      "nosec": 0
    },
    "examples/hardcoded-tmp.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 3,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0
    },
    "examples/hashlib_new_insecure_functions.py": {
      "CONFIDENCE.HIGH": 5,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 5,
      "SEVERITY.UNDEFINED": 0,
      "loc": 8,
      "nosec": 0
    },
    "examples/httplib_https.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 6,
      "nosec": 0
    },
    "examples/httpoxy_cgihandler.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 8,
      "nosec": 0
    },
    "examples/httpoxy_twisted_directory.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 6,
      "nosec": 0
    },
    "examples/httpoxy_twisted_script.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 6,
      "nosec": 0
    },
    "examples/imports-aliases.py": {
      "CONFIDENCE.HIGH": 9,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 4,
      "SEVERITY.MEDIUM": 5,
      "SEVERITY.UNDEFINED": 0,
      "loc": 13,
      "nosec": 0
    },
    "examples/imports-from.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 6,
      "nosec": 0
    },
    "examples/imports-function.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 7,
      "nosec": 0
    },
    "examples/imports-with-importlib.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 7,
      "nosec": 0
    },
    "examples/imports.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 4,
      "nosec": 0
    },
    "examples/init-py-test/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0
    },
    "examples/init-py-test/subdirectory-okay.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1,
      "nosec": 0
    },
    "examples/input.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1,
      "nosec": 0
    },
    "examples/jinja2_templating.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 2,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 5,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 20,
      "nosec": 0
    },
    "examples/mako_templating.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 6,
      "nosec": 0
    },
    "examples/mark_safe.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 3,
      "nosec": 0
    },
    "examples/mark_safe_insecure.py": {
      "CONFIDENCE.HIGH": 52,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 52,
      "SEVERITY.UNDEFINED": 0,
      "loc": 108,
      "nosec": 3
    },
    "examples/mark_safe_secure.py": {
      "CONFIDENCE.HIGH": 17,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 17,
      "SEVERITY.UNDEFINED": 0,
      "loc": 58,
      "nosec": 3
    },
    "examples/marshal_deserialize.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 9,
      "nosec": 0
    },
    "examples/mktemp.py": {
      "CONFIDENCE.HIGH": 4,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 8,
      "nosec": 0
    },
    "examples/multiline_statement.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 5,
      "nosec": 0
    },
    "examples/new_candidates-all.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 12,
      "nosec": 3
    },
    "examples/new_candidates-none.py": {
      "loc": 3,
      "nosec": 0
    },
    "examples/new_candidates-nosec.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 9,
      "nosec": 3
    },
    "examples/new_candidates-some.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 3
    },
    "examples/no_host_key_verification.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 2,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 2,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 4,
      "nosec": 0
    },
    "examples/nonsense.py": {
      "loc": 1,
      "nosec": 0
    },
    "examples/nonsense2.py": {
      "loc": 1,
      "nosec": 0
    },
    "examples/nosec.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 7,
      "nosec": 4
    },
    "examples/okay.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1,
      "nosec": 0
    },
    "examples/os-chmod-py2.py": {
      "CONFIDENCE.HIGH": 9,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 8,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 15,
      "nosec": 0
    },
    "examples/os-chmod-py3.py": {
      "CONFIDENCE.HIGH": 9,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 8,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 15,
      "nosec": 0
    },
    "examples/os-exec.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 8,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 8,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 9,
      "nosec": 0
    },
    "examples/os-popen.py": {
      "CONFIDENCE.HIGH": 9,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 8,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 13,
      "nosec": 0
    },
    "examples/os-spawn.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 8,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 8,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 9,
      "nosec": 0
    },
    "examples/os-startfile.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 3,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 4,
      "nosec": 0
    },
    "examples/os_system.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 2,
      "nosec": 0
    },
    "examples/paramiko_injection.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 1,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 4,
      "nosec": 0
    },
    "examples/partial_path_process.py": {
      "CONFIDENCE.HIGH": 11,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 11,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 9,
      "nosec": 0
    },
    "examples/pickle_deserialize.py": {
      "CONFIDENCE.HIGH": 8,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 6,
      "SEVERITY.UNDEFINED": 0,
      "loc": 19,
      "nosec": 0
    },
    "examples/popen_wrappers.py": {
      "CONFIDENCE.HIGH": 7,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 7,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0
    },
    "examples/pycrypto.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 2,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 8,
      "nosec": 0
    },
    "examples/pycryptodome.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 2,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 8,
      "nosec": 0
    },
    "examples/random_module.py": {
      "CONFIDENCE.HIGH": 6,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 6,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 13,
      "nosec": 0
    },
    "examples/requests-ssl-verify-disabled.py": {
      "CONFIDENCE.HIGH": 7,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 7,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 15,
      "nosec": 0
    },
    "examples/skip.py": {
      "CONFIDENCE.HIGH": 5,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 5,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 7,
      "nosec": 2
    },
    "examples/sql_statements-py36.py": {
      "loc": 28,
      "nosec": 0
    },
    "examples/sql_statements.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 8,
      "CONFIDENCE.MEDIUM": 6,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 14,
      "SEVERITY.UNDEFINED": 0,
      "loc": 26,
      "nosec": 0
    },
    "examples/ssl-insecure-version.py": {
      "CONFIDENCE.HIGH": 7,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 11,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 7,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 10,
      "SEVERITY.UNDEFINED": 0,
      "loc": 25,
      "nosec": 0
    },
    "examples/subprocess_shell.py": {
      "CONFIDENCE.HIGH": 32,
      "CONFIDENCE.LOW": 1,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 11,
      "SEVERITY.LOW": 21,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 41,
      "nosec": 0
    },
    "examples/telnetlib.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 2,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 14,
      "nosec": 0
    },
    "examples/tempnam.py": {
      "CONFIDENCE.HIGH": 6,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 6,
      "SEVERITY.UNDEFINED": 0,
      "loc": 9,
      "nosec": 0
    },
    "examples/try_except_continue.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 22,
      "nosec": 0
    },
    "examples/try_except_pass.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 23,
      "nosec": 0
    },
    "examples/unverified_context.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 3,
      "nosec": 0
    },
    "examples/urlopen.py": {
      "CONFIDENCE.HIGH": 14,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 14,
      "SEVERITY.UNDEFINED": 0,
      "loc": 44,
      "nosec": 0
    },
    "examples/weak_cryptographic_key_sizes.py": {
      "CONFIDENCE.HIGH": 18,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 10,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 8,
      "SEVERITY.UNDEFINED": 0,
      "loc": 55,
      "nosec": 0
    },
    "examples/wildcard-injection.py": {
      "CONFIDENCE.HIGH": 9,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 5,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 4,
      "SEVERITY.LOW": 10,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 12,
      "nosec": 0
    },
    "examples/xml_etree_celementtree.py": {
      "CONFIDENCE.HIGH": 5,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 13,
      "nosec": 0
    },
    "examples/xml_etree_elementtree.py": {
      "CONFIDENCE.HIGH": 5,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 13,
      "nosec": 0
    },
    "examples/xml_expatbuilder.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 7,
      "nosec": 0
    },
    "examples/xml_expatreader.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 4,
      "nosec": 0
    },
    "examples/xml_lxml.py": {
      "CONFIDENCE.HIGH": 4,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 8,
      "nosec": 0
    },
    "examples/xml_minidom.py": {
      "CONFIDENCE.HIGH": 4,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 12,
      "nosec": 0
    },
    "examples/xml_pulldom.py": {
      "CONFIDENCE.HIGH": 4,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 2,
      "SEVERITY.UNDEFINED": 0,
      "loc": 12,
      "nosec": 0
    },
    "examples/xml_sax.py": {
      "CONFIDENCE.HIGH": 8,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 6,
      "SEVERITY.UNDEFINED": 0,
      "loc": 25,
      "nosec": 0
    },
    "examples/xml_xmlrpc.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 8,
      "nosec": 0
    },
    "examples/yaml_load.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 1,
      "SEVERITY.UNDEFINED": 0,
      "loc": 12,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "1 assert True\n",
      "filename": "examples/assert.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "3 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n4 s.bind(('0.0.0.0', 31137))\n5 s.bind(('192.168.0.1', 8080))\n",
      "filename": "examples/binding.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible binding to all interfaces.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html",
      "test_id": "B104",
      "test_name": "hardcoded_bind_all_interfaces"
    },
    {
      "code": "5 # Insecure mode\n6 mode = ECB(iv)\n7 \n",
      "filename": "examples/cipher-modes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure cipher mode cryptography.hazmat.primitives.ciphers.modes.ECB.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b304-b305-ciphers-and-modes",
      "test_id": "B305",
      "test_name": "blacklist"
    },
    {
      "code": "1 from Crypto.Cipher import ARC2 as pycrypto_arc2\n2 from Crypto.Cipher import ARC4 as pycrypto_arc4\n3 from Crypto.Cipher import Blowfish as pycrypto_blowfish\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module ARC2 are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "1 from Crypto.Cipher import ARC2 as pycrypto_arc2\n2 from Crypto.Cipher import ARC4 as pycrypto_arc4\n3 from Crypto.Cipher import Blowfish as pycrypto_blowfish\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module ARC4 are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "2 from Crypto.Cipher import ARC4 as pycrypto_arc4\n3 from Crypto.Cipher import Blowfish as pycrypto_blowfish\n4 from Crypto.Cipher import DES as pycrypto_des\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module Blowfish are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "3 from Crypto.Cipher import Blowfish as pycrypto_blowfish\n4 from Crypto.Cipher import DES as pycrypto_des\n5 from Crypto.Cipher import XOR as pycrypto_xor\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module DES are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "4 from Crypto.Cipher import DES as pycrypto_des\n5 from Crypto.Cipher import XOR as pycrypto_xor\n6 from Cryptodome.Cipher import ARC2 as pycryptodomex_arc2\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module XOR are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "5 from Crypto.Cipher import XOR as pycrypto_xor\n6 from Cryptodome.Cipher import ARC2 as pycryptodomex_arc2\n7 from Cryptodome.Cipher import ARC4 as pycryptodomex_arc4\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "6 from Cryptodome.Cipher import ARC2 as pycryptodomex_arc2\n7 from Cryptodome.Cipher import ARC4 as pycryptodomex_arc4\n8 from Cryptodome.Cipher import Blowfish as pycryptodomex_blowfish\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "7 from Cryptodome.Cipher import ARC4 as pycryptodomex_arc4\n8 from Cryptodome.Cipher import Blowfish as pycryptodomex_blowfish\n9 from Cryptodome.Cipher import DES as pycryptodomex_des\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "8 from Cryptodome.Cipher import Blowfish as pycryptodomex_blowfish\n9 from Cryptodome.Cipher import DES as pycryptodomex_des\n10 from Cryptodome.Cipher import XOR as pycryptodomex_xor\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "9 from Cryptodome.Cipher import DES as pycryptodomex_des\n10 from Cryptodome.Cipher import XOR as pycryptodomex_xor\n11 from Crypto.Hash import SHA\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "10 from Cryptodome.Cipher import XOR as pycryptodomex_xor\n11 from Crypto.Hash import SHA\n12 from Crypto import Random\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module SHA are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "11 from Crypto.Hash import SHA\n12 from Crypto import Random\n13 from Crypto.Util import Counter\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module Random are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "12 from Crypto import Random\n13 from Crypto.Util import Counter\n14 from cryptography.hazmat.primitives.ciphers import Cipher\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module Counter are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "21 iv = Random.new().read(pycrypto_arc2.block_size)\n22 cipher = pycrypto_arc2.new(key, pycrypto_arc2.MODE_CFB, iv)\n23 msg = iv + cipher.encrypt(b'Attack at dawn')\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Crypto.Cipher.ARC2.new. Replace with a known secure cipher such as AES.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "23 msg = iv + cipher.encrypt(b'Attack at dawn')\n24 cipher = pycryptodomex_arc2.new(key, pycryptodomex_arc2.MODE_CFB, iv)\n25 msg = iv + cipher.encrypt(b'Attack at dawn')\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Cryptodome.Cipher.ARC2.new. Replace with a known secure cipher such as AES.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "28 nonce = Random.new().read(16)\n29 tempkey = SHA.new(key+nonce).digest()\n30 cipher = pycrypto_arc4.new(tempkey)\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "29 tempkey = SHA.new(key+nonce).digest()\n30 cipher = pycrypto_arc4.new(tempkey)\n31 msg = nonce + cipher.encrypt(b'Open the pod bay doors, HAL')\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Crypto.Cipher.ARC4.new. Replace with a known secure cipher such as AES.",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "31 msg = nonce + cipher.encrypt(b'Open the pod bay doors, HAL')\n32 cipher = pycryptodomex_arc4.new(tempkey)\n33 msg = nonce + cipher.encrypt(b'Open the pod bay doors, HAL')\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Cryptodome.Cipher.ARC4.new. Replace with a known secure cipher such as AES.",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "41 bs = pycrypto_blowfish.block_size\n42 cipher = pycrypto_blowfish.new(key, pycrypto_blowfish.MODE_CBC, iv)\n43 msg = iv + cipher.encrypt(plaintext + padding)\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Crypto.Cipher.Blowfish.new. Replace with a known secure cipher such as AES.",
      "line_number": 42,
      "line_range": [
        42
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "44 bs = pycryptodomex_blowfish.block_size\n45 cipher = pycryptodomex_blowfish.new(key, pycryptodomex_blowfish.MODE_CBC, iv)\n46 msg = iv + cipher.encrypt(plaintext + padding)\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Cryptodome.Cipher.Blowfish.new. Replace with a known secure cipher such as AES.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "51 ctr = Counter.new(pycrypto_des.block_size*8/2, prefix=nonce)\n52 cipher = pycrypto_des.new(key, pycrypto_des.MODE_CTR, counter=ctr)\n53 msg = nonce + cipher.encrypt(plaintext)\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Crypto.Cipher.DES.new. Replace with a known secure cipher such as AES.",
      "line_number": 52,
      "line_range": [
        52
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "55 ctr = Counter.new(pycryptodomex_des.block_size*8/2, prefix=nonce)\n56 cipher = pycryptodomex_des.new(key, pycryptodomex_des.MODE_CTR, counter=ctr)\n57 msg = nonce + cipher.encrypt(plaintext)\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Cryptodome.Cipher.DES.new. Replace with a known secure cipher such as AES.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "60 plaintext = b'Encrypt me'\n61 cipher = pycrypto_xor.new(key)\n62 msg = cipher.encrypt(plaintext)\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Crypto.Cipher.XOR.new. Replace with a known secure cipher such as AES.",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "62 msg = cipher.encrypt(plaintext)\n63 cipher = pycryptodomex_xor.new(key)\n64 msg = cipher.encrypt(plaintext)\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher Cryptodome.Cipher.XOR.new. Replace with a known secure cipher such as AES.",
      "line_number": 63,
      "line_range": [
        63
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "65 \n66 cipher = Cipher(algorithms.ARC4(key), mode=None, backend=default_backend())\n67 encryptor = cipher.encryptor()\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher cryptography.hazmat.primitives.ciphers.algorithms.ARC4. Replace with a known secure cipher such as AES.",
      "line_number": 66,
      "line_range": [
        66
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "69 \n70 cipher = Cipher(algorithms.Blowfish(key), mode=None, backend=default_backend())\n71 encryptor = cipher.encryptor()\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher cryptography.hazmat.primitives.ciphers.algorithms.Blowfish. Replace with a known secure cipher such as AES.",
      "line_number": 70,
      "line_range": [
        70
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "73 \n74 cipher = Cipher(algorithms.IDEA(key), mode=None, backend=default_backend())\n75 encryptor = cipher.encryptor()\n",
      "filename": "examples/ciphers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Use of insecure cipher cryptography.hazmat.primitives.ciphers.algorithms.IDEA. Replace with a known secure cipher such as AES.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b304-b305-ciphers-and-modes",
      "test_id": "B304",
      "test_name": "blacklist"
    },
    {
      "code": "1 from cryptography.hazmat.primitives import hashes\n2 from Crypto.Hash import MD2 as pycrypto_md2\n3 from Crypto.Hash import MD4 as pycrypto_md4\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module MD2 are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "2 from Crypto.Hash import MD2 as pycrypto_md2\n3 from Crypto.Hash import MD4 as pycrypto_md4\n4 from Crypto.Hash import MD5 as pycrypto_md5\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module MD4 are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "3 from Crypto.Hash import MD4 as pycrypto_md4\n4 from Crypto.Hash import MD5 as pycrypto_md5\n5 from Crypto.Hash import SHA as pycrypto_sha\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module MD5 are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "4 from Crypto.Hash import MD5 as pycrypto_md5\n5 from Crypto.Hash import SHA as pycrypto_sha\n6 from Cryptodome.Hash import MD2 as pycryptodomex_md2\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module SHA are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "5 from Crypto.Hash import SHA as pycrypto_sha\n6 from Cryptodome.Hash import MD2 as pycryptodomex_md2\n7 from Cryptodome.Hash import MD4 as pycryptodomex_md4\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "6 from Cryptodome.Hash import MD2 as pycryptodomex_md2\n7 from Cryptodome.Hash import MD4 as pycryptodomex_md4\n8 from Cryptodome.Hash import MD5 as pycryptodomex_md5\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "7 from Cryptodome.Hash import MD4 as pycryptodomex_md4\n8 from Cryptodome.Hash import MD5 as pycryptodomex_md5\n9 from Cryptodome.Hash import SHA as pycryptodomex_sha\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "8 from Cryptodome.Hash import MD5 as pycryptodomex_md5\n9 from Cryptodome.Hash import SHA as pycryptodomex_sha\n10 import hashlib\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "11 \n12 hashlib.md5(1)\n13 hashlib.md5(1).hexdigest()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "12 hashlib.md5(1)\n13 hashlib.md5(1).hexdigest()\n14 \n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "14 \n15 abc = str.replace(hashlib.md5(\"1\"), \"###\")\n16 \n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "16 \n17 print(hashlib.md5(\"1\"))\n18 \n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "18 \n19 hashlib.sha1(1)\n20 \n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "20 \n21 pycrypto_md2.new()\n22 pycrypto_md4.new()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "21 pycrypto_md2.new()\n22 pycrypto_md4.new()\n23 pycrypto_md5.new()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "22 pycrypto_md4.new()\n23 pycrypto_md5.new()\n24 pycrypto_sha.new()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "23 pycrypto_md5.new()\n24 pycrypto_sha.new()\n25 \n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "25 \n26 pycryptodomex_md2.new()\n27 pycryptodomex_md4.new()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "26 pycryptodomex_md2.new()\n27 pycryptodomex_md4.new()\n28 pycryptodomex_md5.new()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "27 pycryptodomex_md4.new()\n28 pycryptodomex_md5.new()\n29 pycryptodomex_sha.new()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 28,
      "line_range": [
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "28 pycryptodomex_md5.new()\n29 pycryptodomex_sha.new()\n30 \n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "30 \n31 hashes.MD5()\n32 hashes.SHA1()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "31 hashes.MD5()\n32 hashes.SHA1()\n",
      "filename": "examples/crypto-md5.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "1 import dill\n2 import StringIO\n3 \n",
      "filename": "examples/dill.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with dill module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "5 pick = dill.dumps({'a': 'b', 'c': 'd'})\n6 print(dill.loads(pick))\n7 \n",
      "filename": "examples/dill.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "10 file_obj.seek(0)\n11 print(dill.load(file_obj))\n12 \n",
      "filename": "examples/dill.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "11 \n12 User.objects.filter(username='admin').extra(dict(could_be='insecure'))\n13 User.objects.filter(username='admin').extra(select=dict(could_be='insecure'))\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "12 User.objects.filter(username='admin').extra(dict(could_be='insecure'))\n13 User.objects.filter(username='admin').extra(select=dict(could_be='insecure'))\n14 query = '\"username\") AS \"username\", * FROM \"auth_user\" WHERE 1=1 OR \"username\"=? --'\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "14 query = '\"username\") AS \"username\", * FROM \"auth_user\" WHERE 1=1 OR \"username\"=? --'\n15 User.objects.filter(username='admin').extra(select={'test': query})\n16 User.objects.filter(username='admin').extra(select={'test': '%secure' % 'nos'})\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "15 User.objects.filter(username='admin').extra(select={'test': query})\n16 User.objects.filter(username='admin').extra(select={'test': '%secure' % 'nos'})\n17 User.objects.filter(username='admin').extra(select={'test': '{}secure'.format('nos')})\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "16 User.objects.filter(username='admin').extra(select={'test': '%secure' % 'nos'})\n17 User.objects.filter(username='admin').extra(select={'test': '{}secure'.format('nos')})\n18 \n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "19 where_var = ['1=1) OR 1=1 AND (1=1']\n20 User.objects.filter(username='admin').extra(where=where_var)\n21 where_str = '1=1) OR 1=1 AND (1=1'\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "21 where_str = '1=1) OR 1=1 AND (1=1'\n22 User.objects.filter(username='admin').extra(where=[where_str])\n23 User.objects.filter(username='admin').extra(where=['%secure' % 'nos'])\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "22 User.objects.filter(username='admin').extra(where=[where_str])\n23 User.objects.filter(username='admin').extra(where=['%secure' % 'nos'])\n24 User.objects.filter(username='admin').extra(where=['{}secure'.format('no')])\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "23 User.objects.filter(username='admin').extra(where=['%secure' % 'nos'])\n24 User.objects.filter(username='admin').extra(where=['{}secure'.format('no')])\n25 \n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "26 tables_var = ['django_content_type\" WHERE \"auth_user\".\"username\"=\"admin']\n27 User.objects.all().extra(tables=tables_var).distinct()\n28 tables_str = 'django_content_type\" WHERE \"auth_user\".\"username\"=\"admin'\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "28 tables_str = 'django_content_type\" WHERE \"auth_user\".\"username\"=\"admin'\n29 User.objects.all().extra(tables=[tables_str]).distinct()\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "4 User.objects.annotate(val=RawSQL('secure', []))\n5 User.objects.annotate(val=RawSQL('%secure' % 'nos', []))\n6 User.objects.annotate(val=RawSQL('{}secure'.format('no'), []))\n",
      "filename": "examples/django_sql_injection_raw.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of RawSQL potential SQL attack vector.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
      "test_id": "B611",
      "test_name": "django_rawsql_used"
    },
    {
      "code": "5 User.objects.annotate(val=RawSQL('%secure' % 'nos', []))\n6 User.objects.annotate(val=RawSQL('{}secure'.format('no'), []))\n7 raw = '\"username\") AS \"val\" FROM \"auth_user\" WHERE \"username\"=\"admin\" --'\n",
      "filename": "examples/django_sql_injection_raw.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of RawSQL potential SQL attack vector.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
      "test_id": "B611",
      "test_name": "django_rawsql_used"
    },
    {
      "code": "7 raw = '\"username\") AS \"val\" FROM \"auth_user\" WHERE \"username\"=\"admin\" --'\n8 User.objects.annotate(val=RawSQL(raw, []))\n9 raw = '\"username\") AS \"val\" FROM \"auth_user\"' \\\n",
      "filename": "examples/django_sql_injection_raw.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of RawSQL potential SQL attack vector.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
      "test_id": "B611",
      "test_name": "django_rawsql_used"
    },
    {
      "code": "10       ' WHERE \"username\"=\"admin\" OR 1=%s --'\n11 User.objects.annotate(val=RawSQL(raw, [0]))\n",
      "filename": "examples/django_sql_injection_raw.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of RawSQL potential SQL attack vector.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
      "test_id": "B611",
      "test_name": "django_rawsql_used"
    },
    {
      "code": "2 \n3 print(eval(\"1+1\"))\n4 print(eval(\"os.getcwd()\"))\n",
      "filename": "examples/eval.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3 print(eval(\"1+1\"))\n4 print(eval(\"os.getcwd()\"))\n5 print(eval(\"os.chmod('%s', 0777)\" % 'test.txt'))\n",
      "filename": "examples/eval.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4 print(eval(\"os.getcwd()\"))\n5 print(eval(\"os.chmod('%s', 0777)\" % 'test.txt'))\n6 \n",
      "filename": "examples/eval.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "1 exec(\"do evil\")\n2 exec \"do evil\"\n",
      "filename": "examples/exec-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1 exec(\"do evil\")\n2 exec \"do evil\"\n",
      "filename": "examples/exec-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "1 exec(\"do evil\")\n",
      "filename": "examples/exec-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of exec detected.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html",
      "test_id": "B102",
      "test_name": "exec_used"
    },
    {
      "code": "9 #bad\n10 app.run(debug=True)\n11 \n",
      "filename": "examples/flask_debug.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b201_flask_debug_true.html",
      "test_id": "B201",
      "test_name": "flask_debug_true"
    },
    {
      "code": "1 from ftplib import FTP\n2 \n3 ftp = FTP('ftp.debian.org')\n4 ftp.login()\n",
      "filename": "examples/ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A FTP-related module is being imported.  FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 1,
      "line_range": [
        1,
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b402-import-ftplib",
      "test_id": "B402",
      "test_name": "blacklist"
    },
    {
      "code": "2 \n3 ftp = FTP('ftp.debian.org')\n4 ftp.login()\n",
      "filename": "examples/ftplib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "FTP-related functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b321-ftplib",
      "test_id": "B321",
      "test_name": "blacklist"
    },
    {
      "code": "1 def someFunction(user, password=\"Admin\"):\n2     print(\"Hi \" + user)\n3 \n4 def someFunction2(password):\n5     if password == \"root\":\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'Admin'",
      "line_number": 1,
      "line_range": [
        1,
        2,
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    },
    {
      "code": "4 def someFunction2(password):\n5     if password == \"root\":\n6         print(\"OK, logged in\")\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'root'",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "8 def noMatch(password):\n9     if password == '':\n10         print(\"No password!\")\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: ''",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "12 def NoMatch2(password):\n13     if password == \"ajklawejrkl42348swfgkg\":\n14         print(\"Nice password!\")\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'ajklawejrkl42348swfgkg'",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "15 \n16 def doLogin(password=\"blerg\"):\n17     pass\n18 \n19 def NoMatch3(a, b):\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'blerg'",
      "line_number": 16,
      "line_range": [
        16,
        17,
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    },
    {
      "code": "21 \n22 doLogin(password=\"blerg\")\n23 password = \"blerg\"\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'blerg'",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b106_hardcoded_password_funcarg.html",
      "test_id": "B106",
      "test_name": "hardcoded_password_funcarg"
    },
    {
      "code": "22 doLogin(password=\"blerg\")\n23 password = \"blerg\"\n24 d[\"password\"] = \"blerg\"\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'blerg'",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "23 password = \"blerg\"\n24 d[\"password\"] = \"blerg\"\n25 \n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'blerg'",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "25 \n26 EMAIL_PASSWORD = \"secret\"\n27 email_pwd = 'emails_secret'\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'secret'",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "26 EMAIL_PASSWORD = \"secret\"\n27 email_pwd = 'emails_secret'\n28 my_secret_password_for_email = 'd6s$f9g!j8mg7hw?n&2'\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'emails_secret'",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "27 email_pwd = 'emails_secret'\n28 my_secret_password_for_email = 'd6s$f9g!j8mg7hw?n&2'\n29 passphrase='1234'\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'd6s$f9g!j8mg7hw?n&2'",
      "line_number": 28,
      "line_range": [
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "28 my_secret_password_for_email = 'd6s$f9g!j8mg7hw?n&2'\n29 passphrase='1234'\n",
      "filename": "examples/hardcoded-passwords.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: '1234'",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "1 with open('/tmp/abc', 'w') as f:\n2     f.write('def')\n3 \n",
      "filename": "examples/hardcoded-tmp.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Probable insecure usage of temp file/directory.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b108_hardcoded_tmp_directory.html",
      "test_id": "B108",
      "test_name": "hardcoded_tmp_directory"
    },
    {
      "code": "7 \n8 with open('/var/tmp/123', 'w') as f:\n9     f.write('def')\n",
      "filename": "examples/hardcoded-tmp.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Probable insecure usage of temp file/directory.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b108_hardcoded_tmp_directory.html",
      "test_id": "B108",
      "test_name": "hardcoded_tmp_directory"
    },
    {
      "code": "10 \n11 with open('/dev/shm/unit/test', 'w') as f:\n12     f.write('def')\n",
      "filename": "examples/hardcoded-tmp.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Probable insecure usage of temp file/directory.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b108_hardcoded_tmp_directory.html",
      "test_id": "B108",
      "test_name": "hardcoded_tmp_directory"
    },
    {
      "code": "2 \n3 hashlib.new('md5')\n4 \n",
      "filename": "examples/hashlib_new_insecure_functions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD4 or MD5 hash function.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b324_hashlib_new.html",
      "test_id": "B324",
      "test_name": "hashlib_new"
    },
    {
      "code": "4 \n5 hashlib.new('md4', 'test')\n6 \n",
      "filename": "examples/hashlib_new_insecure_functions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD4 or MD5 hash function.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b324_hashlib_new.html",
      "test_id": "B324",
      "test_name": "hashlib_new"
    },
    {
      "code": "6 \n7 hashlib.new(name='md5', string='test')\n8 \n",
      "filename": "examples/hashlib_new_insecure_functions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD4 or MD5 hash function.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b324_hashlib_new.html",
      "test_id": "B324",
      "test_name": "hashlib_new"
    },
    {
      "code": "8 \n9 hashlib.new('MD4', string='test')\n10 \n",
      "filename": "examples/hashlib_new_insecure_functions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD4 or MD5 hash function.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b324_hashlib_new.html",
      "test_id": "B324",
      "test_name": "hashlib_new"
    },
    {
      "code": "10 \n11 hashlib.new(string='test', name='MD5')\n12 \n",
      "filename": "examples/hashlib_new_insecure_functions.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD4 or MD5 hash function.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b324_hashlib_new.html",
      "test_id": "B324",
      "test_name": "hashlib_new"
    },
    {
      "code": "1 import httplib\n2 c = httplib.HTTPSConnection(\"example.com\")\n3 \n",
      "filename": "examples/httplib_https.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "4 import http.client\n5 c = http.client.HTTPSConnection(\"example.com\")\n6 \n",
      "filename": "examples/httplib_https.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "7 import six\n8 six.moves.http_client.HTTPSConnection(\"example.com\")\n",
      "filename": "examples/httplib_https.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b309-httpsconnection",
      "test_id": "B309",
      "test_name": "blacklist"
    },
    {
      "code": "9 if __name__ == '__main__':\n10     wsgiref.handlers.CGIHandler().run(application)\n",
      "filename": "examples/httpoxy_cgihandler.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Consider possible security implications associated with wsgiref.handlers.CGIHandler module.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b412-import-httpoxy",
      "test_id": "B412",
      "test_name": "blacklist"
    },
    {
      "code": "4 root = static.File(\"/root\")\n5 root.putChild(\"cgi-bin\", twcgi.CGIDirectory(\"/var/www/cgi-bin\"))\n6 reactor.listenTCP(80, server.Site(root))\n",
      "filename": "examples/httpoxy_twisted_directory.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Consider possible security implications associated with twisted.web.twcgi.CGIDirectory module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b412-import-httpoxy",
      "test_id": "B412",
      "test_name": "blacklist"
    },
    {
      "code": "4 root = static.File(\"/root\")\n5 root.putChild(\"login.cgi\", twcgi.CGIScript(\"/var/www/cgi-bin/login.py\"))\n6 reactor.listenTCP(80, server.Site(root))\n",
      "filename": "examples/httpoxy_twisted_script.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Consider possible security implications associated with twisted.web.twcgi.CGIScript module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b412-import-httpoxy",
      "test_id": "B412",
      "test_name": "blacklist"
    },
    {
      "code": "1 from subprocess import Popen as pop\n2 import hashlib as h\n3 import hashlib as hh\n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with Popen module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "5 import hashlib as hhhh\n6 from pickle import loads as lp\n7 import pickle as p\n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with loads module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "6 from pickle import loads as lp\n7 import pickle as p\n8 \n9 pop('/bin/gcc --version', shell=True)\n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 7,
      "line_range": [
        7,
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "8 \n9 pop('/bin/gcc --version', shell=True)\n10 \n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "10 \n11 h.md5('1')\n12 hh.md5('2')\n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "11 h.md5('1')\n12 hh.md5('2')\n13 hhh.md5('3').hexdigest()\n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "12 hh.md5('2')\n13 hhh.md5('3').hexdigest()\n14 hhhh.md5('4')\n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "13 hhh.md5('3').hexdigest()\n14 hhhh.md5('4')\n15 lp({'key': 'value'})\n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "14 hhhh.md5('4')\n15 lp({'key': 'value'})\n",
      "filename": "examples/imports-aliases.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "1 from subprocess import Popen\n2 \n3 from ..foo import sys\n4 from . import sys\n",
      "filename": "examples/imports-from.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with Popen module.",
      "line_number": 1,
      "line_range": [
        1,
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "5 from .. import sys\n6 from .. import subprocess\n7 from ..subprocess import Popen\n",
      "filename": "examples/imports-from.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "6 from .. import subprocess\n7 from ..subprocess import Popen\n",
      "filename": "examples/imports-from.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with Popen module.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1 os = __import__(\"os\")\n2 pickle = __import__(\"pickle\")\n3 sys = __import__(\"sys\")\n",
      "filename": "examples/imports-function.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "3 sys = __import__(\"sys\")\n4 subprocess = __import__(\"subprocess\")\n5 \n",
      "filename": "examples/imports-function.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "2 a = importlib.import_module('os')\n3 b = importlib.import_module('pickle')\n4 c = importlib.__import__('sys')\n",
      "filename": "examples/imports-with-importlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "4 c = importlib.__import__('sys')\n5 d = importlib.__import__('subprocess')\n6 \n",
      "filename": "examples/imports-with-importlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1 import os\n2 import pickle\n3 import sys\n",
      "filename": "examples/imports.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "3 import sys\n4 import subprocess\n",
      "filename": "examples/imports.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1 input()\n",
      "filename": "examples/input.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input",
      "test_id": "B322",
      "test_name": "blacklist"
    },
    {
      "code": "8         loader=templateLoader )\n9 Environment(loader=templateLoader, load=templateLoader, autoescape=something)\n10 templateEnv = jinja2.Environment(autoescape=False, loader=templateLoader )\n",
      "filename": "examples/jinja2_templating.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b701_jinja2_autoescape_false.html",
      "test_id": "B701",
      "test_name": "jinja2_autoescape_false"
    },
    {
      "code": "9 Environment(loader=templateLoader, load=templateLoader, autoescape=something)\n10 templateEnv = jinja2.Environment(autoescape=False, loader=templateLoader )\n11 Environment(loader=templateLoader,\n",
      "filename": "examples/jinja2_templating.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b701_jinja2_autoescape_false.html",
      "test_id": "B701",
      "test_name": "jinja2_autoescape_false"
    },
    {
      "code": "10 templateEnv = jinja2.Environment(autoescape=False, loader=templateLoader )\n11 Environment(loader=templateLoader,\n12             load=templateLoader,\n13             autoescape=False)\n14 \n",
      "filename": "examples/jinja2_templating.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.",
      "line_number": 11,
      "line_range": [
        11,
        12,
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b701_jinja2_autoescape_false.html",
      "test_id": "B701",
      "test_name": "jinja2_autoescape_false"
    },
    {
      "code": "14 \n15 Environment(loader=templateLoader,\n16             load=templateLoader)\n17 \n",
      "filename": "examples/jinja2_templating.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.",
      "line_number": 15,
      "line_range": [
        15,
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b701_jinja2_autoescape_false.html",
      "test_id": "B701",
      "test_name": "jinja2_autoescape_false"
    },
    {
      "code": "25     return 'foobar'\n26 Environment(loader=templateLoader, autoescape=fake_func())\n",
      "filename": "examples/jinja2_templating.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b701_jinja2_autoescape_false.html",
      "test_id": "B701",
      "test_name": "jinja2_autoescape_false"
    },
    {
      "code": "5 \n6 Template(\"hello\")\n7 \n",
      "filename": "examples/mako_templating.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b702_use_of_mako_templates.html",
      "test_id": "B702",
      "test_name": "use_of_mako_templates"
    },
    {
      "code": "9 # in for now so that if it gets fixed inadvertitently we know.\n10 mako.template.Template(\"hern\")\n11 template.Template(\"hern\")\n",
      "filename": "examples/mako_templating.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b702_use_of_mako_templates.html",
      "test_id": "B702",
      "test_name": "use_of_mako_templates"
    },
    {
      "code": "10 mako.template.Template(\"hern\")\n11 template.Template(\"hern\")\n",
      "filename": "examples/mako_templating.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b702_use_of_mako_templates.html",
      "test_id": "B702",
      "test_name": "use_of_mako_templates"
    },
    {
      "code": "3 mystr = '<b>Hello World</b>'\n4 mystr = safestring.mark_safe(mystr)\n",
      "filename": "examples/mark_safe.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "9 my_insecure_str = insecure_function('insecure', cls='\" onload=\"alert(\\'xss\\')')\n10 safestring.mark_safe(my_insecure_str)\n11 safestring.SafeText(my_insecure_str)\n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "9 my_insecure_str = insecure_function('insecure', cls='\" onload=\"alert(\\'xss\\')')\n10 safestring.mark_safe(my_insecure_str)\n11 safestring.SafeText(my_insecure_str)\n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "10 safestring.mark_safe(my_insecure_str)\n11 safestring.SafeText(my_insecure_str)\n12 safestring.SafeUnicode(my_insecure_str)\n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "11 safestring.SafeText(my_insecure_str)\n12 safestring.SafeUnicode(my_insecure_str)\n13 safestring.SafeString(my_insecure_str)\n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "12 safestring.SafeUnicode(my_insecure_str)\n13 safestring.SafeString(my_insecure_str)\n14 safestring.SafeBytes(my_insecure_str)\n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "13 safestring.SafeString(my_insecure_str)\n14 safestring.SafeBytes(my_insecure_str)\n15 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "21         my_insecure_str = 'Secure'\n22     safestring.mark_safe(my_insecure_str)\n23 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "21         my_insecure_str = 'Secure'\n22     safestring.mark_safe(my_insecure_str)\n23 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "29         my_insecure_str = insecure_function('insecure', cls=cls)\n30     safestring.mark_safe(my_insecure_str)\n31 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "29         my_insecure_str = insecure_function('insecure', cls=cls)\n30     safestring.mark_safe(my_insecure_str)\n31 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "40         my_insecure_str = insecure_function('insecure', cls=cls)\n41     safestring.mark_safe(my_insecure_str)\n42 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "40         my_insecure_str = insecure_function('insecure', cls=cls)\n41     safestring.mark_safe(my_insecure_str)\n42 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "53         my_insecure_str = insecure_function('insecure', cls=cls)\n54     safestring.mark_safe(my_insecure_str)\n55 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "53         my_insecure_str = insecure_function('insecure', cls=cls)\n54     safestring.mark_safe(my_insecure_str)\n55 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "58     my_insecure_str = insecure_function('insecure', cls=cls)\n59     safestring.mark_safe('<b>{} {}</b>'.format(my_insecure_str, 'STR'))\n60 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "58     my_insecure_str = insecure_function('insecure', cls=cls)\n59     safestring.mark_safe('<b>{} {}</b>'.format(my_insecure_str, 'STR'))\n60 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "63     my_insecure_str = insecure_function('insecure', cls=cls)\n64     safestring.mark_safe('<b>{}</b>'.format(*[my_insecure_str]))\n65 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 64,
      "line_range": [
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "63     my_insecure_str = insecure_function('insecure', cls=cls)\n64     safestring.mark_safe('<b>{}</b>'.format(*[my_insecure_str]))\n65 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 64,
      "line_range": [
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "68     my_insecure_str = insecure_function('insecure', cls=cls)\n69     safestring.mark_safe('<b>{b}</b>'.format(b=my_insecure_str))\n70 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 69,
      "line_range": [
        69
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "68     my_insecure_str = insecure_function('insecure', cls=cls)\n69     safestring.mark_safe('<b>{b}</b>'.format(b=my_insecure_str))\n70 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 69,
      "line_range": [
        69
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "73     my_insecure_str = insecure_function('insecure', cls=cls)\n74     safestring.mark_safe('<b>{b}</b>'.format(**{'b': my_insecure_str}))\n75 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "73     my_insecure_str = insecure_function('insecure', cls=cls)\n74     safestring.mark_safe('<b>{b}</b>'.format(**{'b': my_insecure_str}))\n75 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "78     my_insecure_str = insecure_function('insecure', cls=cls)\n79     safestring.mark_safe('<b>%s</b>' % my_insecure_str)\n80 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "78     my_insecure_str = insecure_function('insecure', cls=cls)\n79     safestring.mark_safe('<b>%s</b>' % my_insecure_str)\n80 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 79,
      "line_range": [
        79
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "83     my_insecure_str = insecure_function('insecure', cls=cls)\n84     safestring.mark_safe('<b>%s %s</b>' % (my_insecure_str, 'b'))\n85 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 84,
      "line_range": [
        84
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "83     my_insecure_str = insecure_function('insecure', cls=cls)\n84     safestring.mark_safe('<b>%s %s</b>' % (my_insecure_str, 'b'))\n85 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 84,
      "line_range": [
        84
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "88     my_insecure_str = insecure_function('insecure', cls=cls)\n89     safestring.mark_safe('<b>%(b)s</b>' % {'b': my_insecure_str})\n90 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "88     my_insecure_str = insecure_function('insecure', cls=cls)\n89     safestring.mark_safe('<b>%(b)s</b>' % {'b': my_insecure_str})\n90 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 89,
      "line_range": [
        89
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "93     import sre_constants\n94     safestring.mark_safe(sre_constants.ANY)\n95 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 94,
      "line_range": [
        94
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "93     import sre_constants\n94     safestring.mark_safe(sre_constants.ANY)\n95 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 94,
      "line_range": [
        94
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "98     import sre_constants.ANY as any_str\n99     safestring.mark_safe(any_str)\n100 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 99,
      "line_range": [
        99
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "98     import sre_constants.ANY as any_str\n99     safestring.mark_safe(any_str)\n100 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 99,
      "line_range": [
        99
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "103     from sre_constants import ANY\n104     safestring.mark_safe(ANY)\n105 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 104,
      "line_range": [
        104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "103     from sre_constants import ANY\n104     safestring.mark_safe(ANY)\n105 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 104,
      "line_range": [
        104
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "108     from sre_constants import ANY as any_str\n109     safestring.mark_safe(any_str)\n110 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 109,
      "line_range": [
        109
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "108     from sre_constants import ANY as any_str\n109     safestring.mark_safe(any_str)\n110 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 109,
      "line_range": [
        109
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "113     with open(path) as f:\n114         safestring.mark_safe(f.read())\n115 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 114,
      "line_range": [
        114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "113     with open(path) as f:\n114         safestring.mark_safe(f.read())\n115 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 114,
      "line_range": [
        114
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "118     with open(path) as f:\n119         safestring.mark_safe(f)\n120 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "118     with open(path) as f:\n119         safestring.mark_safe(f)\n120 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 119,
      "line_range": [
        119
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "125         my_secure_str += insecure_function('insecure', cls='\" onload=\"alert(\\'xss\\')')\n126     safestring.mark_safe(my_secure_str)\n127 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 126,
      "line_range": [
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "125         my_secure_str += insecure_function('insecure', cls='\" onload=\"alert(\\'xss\\')')\n126     safestring.mark_safe(my_secure_str)\n127 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 126,
      "line_range": [
        126
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "132         my_secure_str += insecure_function('insecure', cls='\" onload=\"alert(\\'xss\\')')\n133     safestring.mark_safe(my_secure_str)\n134 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "132         my_secure_str += insecure_function('insecure', cls='\" onload=\"alert(\\'xss\\')')\n133     safestring.mark_safe(my_secure_str)\n134 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 133,
      "line_range": [
        133
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "142         my_secure_str = 'Secure'\n143     safestring.mark_safe(my_secure_str)\n144 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 143,
      "line_range": [
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "142         my_secure_str = 'Secure'\n143     safestring.mark_safe(my_secure_str)\n144 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 143,
      "line_range": [
        143
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "148 def test_insecure_shadow():  # var assigned out of scope\n149     safestring.mark_safe(mystr)\n150 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 149,
      "line_range": [
        149
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "148 def test_insecure_shadow():  # var assigned out of scope\n149     safestring.mark_safe(mystr)\n150 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 149,
      "line_range": [
        149
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "152 def test_insecure(str_arg):\n153     safestring.mark_safe(str_arg)\n154 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 153,
      "line_range": [
        153
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "152 def test_insecure(str_arg):\n153     safestring.mark_safe(str_arg)\n154 \n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 153,
      "line_range": [
        153
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "158         str_arg = 'could be insecure'\n159     safestring.mark_safe(str_arg)\n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Potential XSS on mark_safe function.",
      "line_number": 159,
      "line_range": [
        159
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b703_django_mark_safe.html",
      "test_id": "B703",
      "test_name": "django_mark_safe"
    },
    {
      "code": "158         str_arg = 'could be insecure'\n159     safestring.mark_safe(str_arg)\n",
      "filename": "examples/mark_safe_insecure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 159,
      "line_range": [
        159
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "3 \n4 safestring.mark_safe('<b>secure</b>')\n5 safestring.SafeText('<b>secure</b>')\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "10 my_secure_str = '<b>Hello World</b>'\n11 safestring.mark_safe(my_secure_str)\n12 \n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "13 my_secure_str, _ = ('<b>Hello World</b>', '')\n14 safestring.mark_safe(my_secure_str)\n15 \n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "16 also_secure_str = my_secure_str\n17 safestring.mark_safe(also_secure_str)\n18 \n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "28         my_secure_str = 'Secure'\n29     safestring.mark_safe(my_secure_str)\n30 \n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "32 def format_secure():\n33     safestring.mark_safe('<b>{}</b>'.format('secure'))\n34     my_secure_str = 'secure'\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "34     my_secure_str = 'secure'\n35     safestring.mark_safe('<b>{}</b>'.format(my_secure_str))\n36     safestring.mark_safe('<b>{} {}</b>'.format(my_secure_str, 'a'))\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "35     safestring.mark_safe('<b>{}</b>'.format(my_secure_str))\n36     safestring.mark_safe('<b>{} {}</b>'.format(my_secure_str, 'a'))\n37     safestring.mark_safe('<b>{} {}</b>'.format(*[my_secure_str, 'a']))\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 36,
      "line_range": [
        36
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "36     safestring.mark_safe('<b>{} {}</b>'.format(my_secure_str, 'a'))\n37     safestring.mark_safe('<b>{} {}</b>'.format(*[my_secure_str, 'a']))\n38     safestring.mark_safe('<b>{b}</b>'.format(b=my_secure_str))  # nosec TODO\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 37,
      "line_range": [
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "40     my_secure_str = '<b>{}</b>'.format(my_secure_str)\n41     safestring.mark_safe(my_secure_str)\n42 \n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 41,
      "line_range": [
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "44 def percent_secure():\n45     safestring.mark_safe('<b>%s</b>' % 'secure')\n46     my_secure_str = 'secure'\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "46     my_secure_str = 'secure'\n47     safestring.mark_safe('<b>%s</b>' % my_secure_str)\n48     safestring.mark_safe('<b>%s %s</b>' % (my_secure_str, 'a'))\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "47     safestring.mark_safe('<b>%s</b>' % my_secure_str)\n48     safestring.mark_safe('<b>%s %s</b>' % (my_secure_str, 'a'))\n49     safestring.mark_safe('<b>%(b)s</b>' % {'b': my_secure_str})  # nosec TODO\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "53     with open(path) as f:\n54         safestring.mark_safe('Secure')\n55 \n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "61         my_secure_str += ' Secure'\n62     safestring.mark_safe(my_secure_str)\n63     while ord(os.urandom(1)) % 2 == 0:\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 62,
      "line_range": [
        62
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "64         my_secure_str += ' Secure'\n65     safestring.mark_safe(my_secure_str)\n66 \n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 65,
      "line_range": [
        65
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "74         my_secure_str = 'Secure'\n75     safestring.mark_safe(my_secure_str)\n",
      "filename": "examples/mark_safe_secure.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
      "line_number": 75,
      "line_range": [
        75
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b308-mark-safe",
      "test_id": "B308",
      "test_name": "blacklist"
    },
    {
      "code": "5 serialized = marshal.dumps({'a': 1})\n6 print(marshal.loads(serialized))\n7 \n",
      "filename": "examples/marshal_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "10 file_obj.seek(0)\n11 print(marshal.load(file_obj))\n12 file_obj.close()\n",
      "filename": "examples/marshal_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Deserialization with the marshal module is possibly dangerous.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal",
      "test_id": "B302",
      "test_name": "blacklist"
    },
    {
      "code": "6 \n7 mktemp(foo)\n8 tempfile.mktemp('foo')\n",
      "filename": "examples/mktemp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "7 mktemp(foo)\n8 tempfile.mktemp('foo')\n9 mt(foo)\n",
      "filename": "examples/mktemp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "8 tempfile.mktemp('foo')\n9 mt(foo)\n10 tmp.mktemp(foo)\n",
      "filename": "examples/mktemp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "9 mt(foo)\n10 tmp.mktemp(foo)\n",
      "filename": "examples/mktemp.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure and deprecated function (mktemp).",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b306-mktemp-q",
      "test_id": "B306",
      "test_name": "blacklist"
    },
    {
      "code": "1 import subprocess\n2 \n3 subprocess.check_output(\"/some_command\",\n4                         \"args\",\n",
      "filename": "examples/multiline_statement.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1,
      "line_range": [
        1,
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "4                         \"args\",\n5                         shell=True,\n6                         universal_newlines=True)\n",
      "filename": "examples/multiline_statement.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 5,
      "line_range": [
        3,
        4,
        5,
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "6     # candidate #1\n7     subprocess.Popen('/bin/ls *', shell=True)\n8     # candidate #2\n",
      "filename": "examples/new_candidates-all.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "14     # candidate #3\n15     y = yaml.load(temp_str)\n16     # candidate #4\n",
      "filename": "examples/new_candidates-all.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b506_yaml_load.html",
      "test_id": "B506",
      "test_name": "yaml_load"
    },
    {
      "code": "21     # candidate #5\n22     xml.sax.make_parser()\n23     # candidate #6\n",
      "filename": "examples/new_candidates-all.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "6     # candidate #1\n7     subprocess.Popen('/bin/ls *', shell=True)\n8     # candidate #2\n",
      "filename": "examples/new_candidates-some.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "3 ssh_client = client.SSHClient()\n4 ssh_client.set_missing_host_key_policy(client.AutoAddPolicy)\n5 ssh_client.set_missing_host_key_policy(client.WarningPolicy)\n",
      "filename": "examples/no_host_key_verification.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "Paramiko call with policy set to automatically trust the unknown host key.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b507_ssh_no_host_key_verification.html",
      "test_id": "B507",
      "test_name": "ssh_no_host_key_verification"
    },
    {
      "code": "4 ssh_client.set_missing_host_key_policy(client.AutoAddPolicy)\n5 ssh_client.set_missing_host_key_policy(client.WarningPolicy)\n",
      "filename": "examples/no_host_key_verification.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "Paramiko call with policy set to automatically trust the unknown host key.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b507_ssh_no_host_key_verification.html",
      "test_id": "B507",
      "test_name": "ssh_no_host_key_verification"
    },
    {
      "code": "5                  shell=True)  #nosec (on the specific kwarg line)\n6 subprocess.Popen('#nosec', shell=True)\n7 subprocess.Popen('/bin/ls *', shell=True) # type: \u2026 # nosec # noqa: E501 ; pylint: disable=line-too-long\n",
      "filename": "examples/nosec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "5                  shell=True)  #nosec (on the specific kwarg line)\n6 subprocess.Popen('#nosec', shell=True)\n7 subprocess.Popen('/bin/ls *', shell=True) # type: \u2026 # nosec # noqa: E501 ; pylint: disable=line-too-long\n",
      "filename": "examples/nosec.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "5 \n6 os.chmod('/etc/passwd', 0227)\n7 os.chmod('/etc/passwd', 07)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0227 on file (/etc/passwd).",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "6 os.chmod('/etc/passwd', 0227)\n7 os.chmod('/etc/passwd', 07)\n8 os.chmod('/etc/passwd', 0664)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 07 on file (/etc/passwd).",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "8 os.chmod('/etc/passwd', 0664)\n9 os.chmod('/etc/passwd', 0777)\n10 os.chmod('/etc/passwd', 0o770)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (/etc/passwd).",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "9 os.chmod('/etc/passwd', 0777)\n10 os.chmod('/etc/passwd', 0o770)\n11 os.chmod('/etc/passwd', 0o776)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Chmod setting a permissive mask 0770 on file (/etc/passwd).",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "10 os.chmod('/etc/passwd', 0o770)\n11 os.chmod('/etc/passwd', 0o776)\n12 os.chmod('/etc/passwd', 0o760)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0776 on file (/etc/passwd).",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "12 os.chmod('/etc/passwd', 0o760)\n13 os.chmod('~/.bashrc', 511)\n14 os.chmod('/etc/hosts', 0o777)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (~/.bashrc).",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "13 os.chmod('~/.bashrc', 511)\n14 os.chmod('/etc/hosts', 0o777)\n15 os.chmod('/tmp/oh_hai', 0x1ff)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (/etc/hosts).",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "14 os.chmod('/etc/hosts', 0o777)\n15 os.chmod('/tmp/oh_hai', 0x1ff)\n16 os.chmod('/etc/passwd', stat.S_IRWXU)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (/tmp/oh_hai).",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "14 os.chmod('/etc/hosts', 0o777)\n15 os.chmod('/tmp/oh_hai', 0x1ff)\n16 os.chmod('/etc/passwd', stat.S_IRWXU)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Probable insecure usage of temp file/directory.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b108_hardcoded_tmp_directory.html",
      "test_id": "B108",
      "test_name": "hardcoded_tmp_directory"
    },
    {
      "code": "16 os.chmod('/etc/passwd', stat.S_IRWXU)\n17 os.chmod(key_file, 0o777)\n",
      "filename": "examples/os-chmod-py2.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (key_file).",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "5 \n6 os.chmod('/etc/passwd', 0o227)\n7 os.chmod('/etc/passwd', 0o7)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0227 on file (/etc/passwd).",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "6 os.chmod('/etc/passwd', 0o227)\n7 os.chmod('/etc/passwd', 0o7)\n8 os.chmod('/etc/passwd', 0o664)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 07 on file (/etc/passwd).",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "8 os.chmod('/etc/passwd', 0o664)\n9 os.chmod('/etc/passwd', 0o777)\n10 os.chmod('/etc/passwd', 0o770)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (/etc/passwd).",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "9 os.chmod('/etc/passwd', 0o777)\n10 os.chmod('/etc/passwd', 0o770)\n11 os.chmod('/etc/passwd', 0o776)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Chmod setting a permissive mask 0770 on file (/etc/passwd).",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "10 os.chmod('/etc/passwd', 0o770)\n11 os.chmod('/etc/passwd', 0o776)\n12 os.chmod('/etc/passwd', 0o760)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0776 on file (/etc/passwd).",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "12 os.chmod('/etc/passwd', 0o760)\n13 os.chmod('~/.bashrc', 511)\n14 os.chmod('/etc/hosts', 0o777)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (~/.bashrc).",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "13 os.chmod('~/.bashrc', 511)\n14 os.chmod('/etc/hosts', 0o777)\n15 os.chmod('/tmp/oh_hai', 0x1ff)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (/etc/hosts).",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "14 os.chmod('/etc/hosts', 0o777)\n15 os.chmod('/tmp/oh_hai', 0x1ff)\n16 os.chmod('/etc/passwd', stat.S_IRWXU)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (/tmp/oh_hai).",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "14 os.chmod('/etc/hosts', 0o777)\n15 os.chmod('/tmp/oh_hai', 0x1ff)\n16 os.chmod('/etc/passwd', stat.S_IRWXU)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Probable insecure usage of temp file/directory.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b108_hardcoded_tmp_directory.html",
      "test_id": "B108",
      "test_name": "hardcoded_tmp_directory"
    },
    {
      "code": "16 os.chmod('/etc/passwd', stat.S_IRWXU)\n17 os.chmod(key_file, 0o777)\n",
      "filename": "examples/os-chmod-py3.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Chmod setting a permissive mask 0777 on file (key_file).",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b103_set_bad_file_permissions.html",
      "test_id": "B103",
      "test_name": "set_bad_file_permissions"
    },
    {
      "code": "2 \n3 os.execl(path, arg0, arg1)\n4 os.execle(path, arg0, arg1, env)\n",
      "filename": "examples/os-exec.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "3 os.execl(path, arg0, arg1)\n4 os.execle(path, arg0, arg1, env)\n5 os.execlp(file, arg0, arg1)\n",
      "filename": "examples/os-exec.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "4 os.execle(path, arg0, arg1, env)\n5 os.execlp(file, arg0, arg1)\n6 os.execlpe(file, arg0, arg1, env)\n",
      "filename": "examples/os-exec.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "5 os.execlp(file, arg0, arg1)\n6 os.execlpe(file, arg0, arg1, env)\n7 os.execv(path, args)\n",
      "filename": "examples/os-exec.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "6 os.execlpe(file, arg0, arg1, env)\n7 os.execv(path, args)\n8 os.execve(path, args, env)\n",
      "filename": "examples/os-exec.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "7 os.execv(path, args)\n8 os.execve(path, args, env)\n9 os.execvp(file, args)\n",
      "filename": "examples/os-exec.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "8 os.execve(path, args, env)\n9 os.execvp(file, args)\n10 os.execvpe(file, args, env)\n",
      "filename": "examples/os-exec.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "9 os.execvp(file, args)\n10 os.execvpe(file, args, env)\n11 \n",
      "filename": "examples/os-exec.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "5 \n6 os.popen('/bin/uname -av')\n7 popen('/bin/uname -av')\n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "6 os.popen('/bin/uname -av')\n7 popen('/bin/uname -av')\n8 o.popen('/bin/uname -av')\n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "7 popen('/bin/uname -av')\n8 o.popen('/bin/uname -av')\n9 pos('/bin/uname -av')\n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "8 o.popen('/bin/uname -av')\n9 pos('/bin/uname -av')\n10 os.popen2('/bin/uname -av')\n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "9 pos('/bin/uname -av')\n10 os.popen2('/bin/uname -av')\n11 os.popen3('/bin/uname -av')\n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "10 os.popen2('/bin/uname -av')\n11 os.popen3('/bin/uname -av')\n12 os.popen4('/bin/uname -av')\n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "11 os.popen3('/bin/uname -av')\n12 os.popen4('/bin/uname -av')\n13 \n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "13 \n14 os.popen4('/bin/uname -av; rm -rf /')\n15 os.popen4(some_var)\n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "14 os.popen4('/bin/uname -av; rm -rf /')\n15 os.popen4(some_var)\n",
      "filename": "examples/os-popen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Starting a process with a shell, possible injection detected, security issue.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "2 \n3 os.spawnl(mode, path)\n4 os.spawnle(mode, path, env)\n",
      "filename": "examples/os-spawn.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "3 os.spawnl(mode, path)\n4 os.spawnle(mode, path, env)\n5 os.spawnlp(mode, file)\n",
      "filename": "examples/os-spawn.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "4 os.spawnle(mode, path, env)\n5 os.spawnlp(mode, file)\n6 os.spawnlpe(mode, file, env)\n",
      "filename": "examples/os-spawn.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "5 os.spawnlp(mode, file)\n6 os.spawnlpe(mode, file, env)\n7 os.spawnv(mode, path, args)\n",
      "filename": "examples/os-spawn.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "6 os.spawnlpe(mode, file, env)\n7 os.spawnv(mode, path, args)\n8 os.spawnve(mode, path, args, env)\n",
      "filename": "examples/os-spawn.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "7 os.spawnv(mode, path, args)\n8 os.spawnve(mode, path, args, env)\n9 os.spawnvp(mode, file, args)\n",
      "filename": "examples/os-spawn.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "8 os.spawnve(mode, path, args, env)\n9 os.spawnvp(mode, file, args)\n10 os.spawnvpe(mode, file, args, env)\n",
      "filename": "examples/os-spawn.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "9 os.spawnvp(mode, file, args)\n10 os.spawnvpe(mode, file, args, env)\n",
      "filename": "examples/os-spawn.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2 \n3 os.startfile('/bin/foo.docx')\n4 os.startfile('/bin/bad.exe')\n",
      "filename": "examples/os-startfile.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "3 os.startfile('/bin/foo.docx')\n4 os.startfile('/bin/bad.exe')\n5 os.startfile('/bin/text.txt')\n",
      "filename": "examples/os-startfile.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "4 os.startfile('/bin/bad.exe')\n5 os.startfile('/bin/text.txt')\n",
      "filename": "examples/os-startfile.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "2 \n3 os.system('/bin/echo hi')\n",
      "filename": "examples/os_system.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "6 # this is not safe\n7 client.exec_command('something; really; unsafe')\n8 \n",
      "filename": "examples/paramiko_injection.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible shell injection via Paramiko call, check inputs are properly sanitized.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b601_paramiko_calls.html",
      "test_id": "B601",
      "test_name": "paramiko_calls"
    },
    {
      "code": "1 from subprocess import Popen as pop\n2 \n3 pop('gcc --version', shell=False)\n4 pop('/bin/gcc --version', shell=False)\n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with Popen module.",
      "line_number": 1,
      "line_range": [
        1,
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "2 \n3 pop('gcc --version', shell=False)\n4 pop('/bin/gcc --version', shell=False)\n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2 \n3 pop('gcc --version', shell=False)\n4 pop('/bin/gcc --version', shell=False)\n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "3 pop('gcc --version', shell=False)\n4 pop('/bin/gcc --version', shell=False)\n5 pop(var, shell=False)\n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "4 pop('/bin/gcc --version', shell=False)\n5 pop(var, shell=False)\n6 \n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "6 \n7 pop(['ls', '-l'], shell=False)\n8 pop(['/bin/ls', '-l'], shell=False)\n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "6 \n7 pop(['ls', '-l'], shell=False)\n8 pop(['/bin/ls', '-l'], shell=False)\n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "7 pop(['ls', '-l'], shell=False)\n8 pop(['/bin/ls', '-l'], shell=False)\n9 \n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "9 \n10 pop('../ls -l', shell=False)\n11 \n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "11 \n12 pop('c:\\\\hello\\\\something', shell=False)\n13 pop('c:/hello/something_else', shell=False)\n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "12 pop('c:\\\\hello\\\\something', shell=False)\n13 pop('c:/hello/something_else', shell=False)\n",
      "filename": "examples/partial_path_process.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import cPickle\n2 import pickle\n3 import StringIO\n",
      "filename": "examples/pickle_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with cPickle module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "1 import cPickle\n2 import pickle\n3 import StringIO\n",
      "filename": "examples/pickle_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "7 pick = pickle.dumps({'a': 'b', 'c': 'd'})\n8 print(pickle.loads(pick))\n9 \n",
      "filename": "examples/pickle_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "12 file_obj.seek(0)\n13 print(pickle.load(file_obj))\n14 \n",
      "filename": "examples/pickle_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "15 file_obj.seek(0)\n16 print(pickle.Unpickler(file_obj).load())\n17 \n",
      "filename": "examples/pickle_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "19 serialized = cPickle.dumps({(): []})\n20 print(cPickle.loads(serialized))\n21 \n",
      "filename": "examples/pickle_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "24 file_obj.seek(0)\n25 print(cPickle.load(file_obj))\n26 \n",
      "filename": "examples/pickle_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 25,
      "line_range": [
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "27 file_obj.seek(0)\n28 print(cPickle.Unpickler(file_obj).load())\n29 \n",
      "filename": "examples/pickle_deserialize.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 28,
      "line_range": [
        28
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "4 \n5 print(commands.getstatusoutput('/bin/echo / | xargs ls'))\n6 print(commands.getoutput('/bin/echo / | xargs ls'))\n",
      "filename": "examples/popen_wrappers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "5 print(commands.getstatusoutput('/bin/echo / | xargs ls'))\n6 print(commands.getoutput('/bin/echo / | xargs ls'))\n7 \n",
      "filename": "examples/popen_wrappers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "10 \n11 print(popen2.popen2('/bin/echo / | xargs ls')[0].read())\n12 print(popen2.popen3('/bin/echo / | xargs ls')[0].read())\n",
      "filename": "examples/popen_wrappers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "11 print(popen2.popen2('/bin/echo / | xargs ls')[0].read())\n12 print(popen2.popen3('/bin/echo / | xargs ls')[0].read())\n13 print(popen2.popen4('/bin/echo / | xargs ls')[0].read())\n",
      "filename": "examples/popen_wrappers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "12 print(popen2.popen3('/bin/echo / | xargs ls')[0].read())\n13 print(popen2.popen4('/bin/echo / | xargs ls')[0].read())\n14 print(popen2.Popen3('/bin/echo / | xargs ls').fromchild.read())\n",
      "filename": "examples/popen_wrappers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "13 print(popen2.popen4('/bin/echo / | xargs ls')[0].read())\n14 print(popen2.Popen3('/bin/echo / | xargs ls').fromchild.read())\n15 print(popen2.Popen4('/bin/echo / | xargs ls').fromchild.read())\n",
      "filename": "examples/popen_wrappers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "14 print(popen2.Popen3('/bin/echo / | xargs ls').fromchild.read())\n15 print(popen2.Popen4('/bin/echo / | xargs ls').fromchild.read())\n",
      "filename": "examples/popen_wrappers.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "1 from Crypto.Cipher import AES\n2 from Crypto import Random\n3 \n",
      "filename": "examples/pycrypto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module AES are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "1 from Crypto.Cipher import AES\n2 from Crypto import Random\n3 \n4 from . import CryptoMaterialsCacheEntry\n",
      "filename": "examples/pycrypto.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module Random are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 2,
      "line_range": [
        2,
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "1 from Cryptodome.Cipher import AES\n2 from Cryptodome import Random\n3 \n",
      "filename": "examples/pycryptodome.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "1 from Cryptodome.Cipher import AES\n2 from Cryptodome import Random\n3 \n4 from . import CryptoMaterialsCacheEntry\n",
      "filename": "examples/pycryptodome.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 2,
      "line_range": [
        2,
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "4 \n5 bad = random.random()\n6 bad = random.randrange()\n",
      "filename": "examples/random_module.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "5 bad = random.random()\n6 bad = random.randrange()\n7 bad = random.randint()\n",
      "filename": "examples/random_module.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "6 bad = random.randrange()\n7 bad = random.randint()\n8 bad = random.choice()\n",
      "filename": "examples/random_module.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "7 bad = random.randint()\n8 bad = random.choice()\n9 bad = random.uniform()\n",
      "filename": "examples/random_module.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "8 bad = random.choice()\n9 bad = random.uniform()\n10 bad = random.triangular()\n",
      "filename": "examples/random_module.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "9 bad = random.uniform()\n10 bad = random.triangular()\n11 \n",
      "filename": "examples/random_module.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "3 requests.get('https://gmail.com', verify=True)\n4 requests.get('https://gmail.com', verify=False)\n5 requests.post('https://gmail.com', verify=True)\n",
      "filename": "examples/requests-ssl-verify-disabled.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Requests call with verify=False disabling SSL certificate checks, security issue.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b501_request_with_no_cert_validation.html",
      "test_id": "B501",
      "test_name": "request_with_no_cert_validation"
    },
    {
      "code": "5 requests.post('https://gmail.com', verify=True)\n6 requests.post('https://gmail.com', verify=False)\n7 requests.put('https://gmail.com', verify=True)\n",
      "filename": "examples/requests-ssl-verify-disabled.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Requests call with verify=False disabling SSL certificate checks, security issue.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b501_request_with_no_cert_validation.html",
      "test_id": "B501",
      "test_name": "request_with_no_cert_validation"
    },
    {
      "code": "7 requests.put('https://gmail.com', verify=True)\n8 requests.put('https://gmail.com', verify=False)\n9 requests.delete('https://gmail.com', verify=True)\n",
      "filename": "examples/requests-ssl-verify-disabled.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Requests call with verify=False disabling SSL certificate checks, security issue.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b501_request_with_no_cert_validation.html",
      "test_id": "B501",
      "test_name": "request_with_no_cert_validation"
    },
    {
      "code": "9 requests.delete('https://gmail.com', verify=True)\n10 requests.delete('https://gmail.com', verify=False)\n11 requests.patch('https://gmail.com', verify=True)\n",
      "filename": "examples/requests-ssl-verify-disabled.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Requests call with verify=False disabling SSL certificate checks, security issue.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b501_request_with_no_cert_validation.html",
      "test_id": "B501",
      "test_name": "request_with_no_cert_validation"
    },
    {
      "code": "11 requests.patch('https://gmail.com', verify=True)\n12 requests.patch('https://gmail.com', verify=False)\n13 requests.options('https://gmail.com', verify=True)\n",
      "filename": "examples/requests-ssl-verify-disabled.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Requests call with verify=False disabling SSL certificate checks, security issue.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b501_request_with_no_cert_validation.html",
      "test_id": "B501",
      "test_name": "request_with_no_cert_validation"
    },
    {
      "code": "13 requests.options('https://gmail.com', verify=True)\n14 requests.options('https://gmail.com', verify=False)\n15 requests.head('https://gmail.com', verify=True)\n",
      "filename": "examples/requests-ssl-verify-disabled.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Requests call with verify=False disabling SSL certificate checks, security issue.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b501_request_with_no_cert_validation.html",
      "test_id": "B501",
      "test_name": "request_with_no_cert_validation"
    },
    {
      "code": "15 requests.head('https://gmail.com', verify=True)\n16 requests.head('https://gmail.com', verify=False)\n",
      "filename": "examples/requests-ssl-verify-disabled.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Requests call with verify=False disabling SSL certificate checks, security issue.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b501_request_with_no_cert_validation.html",
      "test_id": "B501",
      "test_name": "request_with_no_cert_validation"
    },
    {
      "code": "1 subprocess.call([\"/bin/ls\", \"-l\"])\n2 subprocess.call([\"/bin/ls\", \"-l\"]) #noqa\n3 subprocess.call([\"/bin/ls\", \"-l\"]) # noqa\n",
      "filename": "examples/skip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 subprocess.call([\"/bin/ls\", \"-l\"])\n2 subprocess.call([\"/bin/ls\", \"-l\"]) #noqa\n3 subprocess.call([\"/bin/ls\", \"-l\"]) # noqa\n",
      "filename": "examples/skip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "2 subprocess.call([\"/bin/ls\", \"-l\"]) #noqa\n3 subprocess.call([\"/bin/ls\", \"-l\"]) # noqa\n4 subprocess.call([\"/bin/ls\", \"-l\"]) # nosec\n",
      "filename": "examples/skip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "4 subprocess.call([\"/bin/ls\", \"-l\"]) # nosec\n5 subprocess.call([\"/bin/ls\", \"-l\"])\n6 subprocess.call([\"/bin/ls\", \"-l\"]) #nosec\n",
      "filename": "examples/skip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "6 subprocess.call([\"/bin/ls\", \"-l\"]) #nosec\n7 subprocess.call([\"/bin/ls\", \"-l\"])\n",
      "filename": "examples/skip.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "3 # bad\n4 query = \"SELECT * FROM foo WHERE id = '%s'\" % identifier\n5 query = \"INSERT INTO foo VALUES ('a', 'b', '%s')\" % value\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "4 query = \"SELECT * FROM foo WHERE id = '%s'\" % identifier\n5 query = \"INSERT INTO foo VALUES ('a', 'b', '%s')\" % value\n6 query = \"DELETE FROM foo WHERE id = '%s'\" % identifier\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "5 query = \"INSERT INTO foo VALUES ('a', 'b', '%s')\" % value\n6 query = \"DELETE FROM foo WHERE id = '%s'\" % identifier\n7 query = \"UPDATE foo SET value = 'b' WHERE id = '%s'\" % identifier\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "6 query = \"DELETE FROM foo WHERE id = '%s'\" % identifier\n7 query = \"UPDATE foo SET value = 'b' WHERE id = '%s'\" % identifier\n8 query = \"\"\"WITH cte AS (SELECT x FROM foo)\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "8 query = \"\"\"WITH cte AS (SELECT x FROM foo)\n9 SELECT x FROM cte WHERE x = '%s'\"\"\" % identifier\n10 # bad alternate forms\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "10 # bad alternate forms\n11 query = \"SELECT * FROM foo WHERE id = '\" + identifier + \"'\"\n12 query = \"SELECT * FROM foo WHERE id = '{}'\".format(identifier)\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "11 query = \"SELECT * FROM foo WHERE id = '\" + identifier + \"'\"\n12 query = \"SELECT * FROM foo WHERE id = '{}'\".format(identifier)\n13 \n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "14 # bad\n15 cur.execute(\"SELECT * FROM foo WHERE id = '%s'\" % identifier)\n16 cur.execute(\"INSERT INTO foo VALUES ('a', 'b', '%s')\" % value)\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "15 cur.execute(\"SELECT * FROM foo WHERE id = '%s'\" % identifier)\n16 cur.execute(\"INSERT INTO foo VALUES ('a', 'b', '%s')\" % value)\n17 cur.execute(\"DELETE FROM foo WHERE id = '%s'\" % identifier)\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "16 cur.execute(\"INSERT INTO foo VALUES ('a', 'b', '%s')\" % value)\n17 cur.execute(\"DELETE FROM foo WHERE id = '%s'\" % identifier)\n18 cur.execute(\"UPDATE foo SET value = 'b' WHERE id = '%s'\" % identifier)\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "17 cur.execute(\"DELETE FROM foo WHERE id = '%s'\" % identifier)\n18 cur.execute(\"UPDATE foo SET value = 'b' WHERE id = '%s'\" % identifier)\n19 # bad alternate forms\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "19 # bad alternate forms\n20 cur.execute(\"SELECT * FROM foo WHERE id = '\" + identifier + \"'\")\n21 cur.execute(\"SELECT * FROM foo WHERE id = '{}'\".format(identifier))\n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "20 cur.execute(\"SELECT * FROM foo WHERE id = '\" + identifier + \"'\")\n21 cur.execute(\"SELECT * FROM foo WHERE id = '{}'\".format(identifier))\n22 \n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "34 \n35 a()(\"SELECT %s FROM foo\" % val)\n36 \n",
      "filename": "examples/sql_statements.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "3 \n4 ssl.wrap_socket(ssl_version=ssl.PROTOCOL_SSLv2)\n5 SSL.Context(method=SSL.SSLv2_METHOD)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "ssl.wrap_socket call with insecure SSL/TLS protocol version identified, security issue.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "4 ssl.wrap_socket(ssl_version=ssl.PROTOCOL_SSLv2)\n5 SSL.Context(method=SSL.SSLv2_METHOD)\n6 SSL.Context(method=SSL.SSLv23_METHOD)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "SSL.Context call with insecure SSL/TLS protocol version identified, security issue.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "5 SSL.Context(method=SSL.SSLv2_METHOD)\n6 SSL.Context(method=SSL.SSLv23_METHOD)\n7 \n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "SSL.Context call with insecure SSL/TLS protocol version identified, security issue.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "7 \n8 herp_derp(ssl_version=ssl.PROTOCOL_SSLv2)\n9 herp_derp(method=SSL.SSLv2_METHOD)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with insecure SSL/TLS protocol identified, possible security issue.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "8 herp_derp(ssl_version=ssl.PROTOCOL_SSLv2)\n9 herp_derp(method=SSL.SSLv2_METHOD)\n10 herp_derp(method=SSL.SSLv23_METHOD)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with insecure SSL/TLS protocol identified, possible security issue.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "9 herp_derp(method=SSL.SSLv2_METHOD)\n10 herp_derp(method=SSL.SSLv23_METHOD)\n11 \n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with insecure SSL/TLS protocol identified, possible security issue.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "12 # strict tests\n13 ssl.wrap_socket(ssl_version=ssl.PROTOCOL_SSLv3)\n14 ssl.wrap_socket(ssl_version=ssl.PROTOCOL_TLSv1)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "ssl.wrap_socket call with insecure SSL/TLS protocol version identified, security issue.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "13 ssl.wrap_socket(ssl_version=ssl.PROTOCOL_SSLv3)\n14 ssl.wrap_socket(ssl_version=ssl.PROTOCOL_TLSv1)\n15 SSL.Context(method=SSL.SSLv3_METHOD)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "ssl.wrap_socket call with insecure SSL/TLS protocol version identified, security issue.",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "14 ssl.wrap_socket(ssl_version=ssl.PROTOCOL_TLSv1)\n15 SSL.Context(method=SSL.SSLv3_METHOD)\n16 SSL.Context(method=SSL.TLSv1_METHOD)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "SSL.Context call with insecure SSL/TLS protocol version identified, security issue.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "15 SSL.Context(method=SSL.SSLv3_METHOD)\n16 SSL.Context(method=SSL.TLSv1_METHOD)\n17 \n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "SSL.Context call with insecure SSL/TLS protocol version identified, security issue.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "17 \n18 herp_derp(ssl_version=ssl.PROTOCOL_SSLv3)\n19 herp_derp(ssl_version=ssl.PROTOCOL_TLSv1)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with insecure SSL/TLS protocol identified, possible security issue.",
      "line_number": 18,
      "line_range": [
        18
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "18 herp_derp(ssl_version=ssl.PROTOCOL_SSLv3)\n19 herp_derp(ssl_version=ssl.PROTOCOL_TLSv1)\n20 herp_derp(method=SSL.SSLv3_METHOD)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with insecure SSL/TLS protocol identified, possible security issue.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "19 herp_derp(ssl_version=ssl.PROTOCOL_TLSv1)\n20 herp_derp(method=SSL.SSLv3_METHOD)\n21 herp_derp(method=SSL.TLSv1_METHOD)\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with insecure SSL/TLS protocol identified, possible security issue.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "20 herp_derp(method=SSL.SSLv3_METHOD)\n21 herp_derp(method=SSL.TLSv1_METHOD)\n22 \n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with insecure SSL/TLS protocol identified, possible security issue.",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b502_ssl_with_bad_version.html",
      "test_id": "B502",
      "test_name": "ssl_with_bad_version"
    },
    {
      "code": "22 \n23 ssl.wrap_socket()\n24 \n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "ssl.wrap_socket call with no SSL/TLS protocol version specified, the default SSLv23 could be insecure, possible security issue.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b504_ssl_with_no_version.html",
      "test_id": "B504",
      "test_name": "ssl_with_no_version"
    },
    {
      "code": "24 \n25 def open_ssl_socket(version=ssl.PROTOCOL_SSLv2):\n26     pass\n27 \n28 def open_ssl_socket(version=SSL.SSLv2_METHOD):\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function definition identified with insecure SSL/TLS protocol version by default, possible security issue.",
      "line_number": 25,
      "line_range": [
        25,
        26,
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b503_ssl_with_bad_defaults.html",
      "test_id": "B503",
      "test_name": "ssl_with_bad_defaults"
    },
    {
      "code": "27 \n28 def open_ssl_socket(version=SSL.SSLv2_METHOD):\n29     pass\n30 \n31 def open_ssl_socket(version=SSL.SSLv23_METHOD):\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function definition identified with insecure SSL/TLS protocol version by default, possible security issue.",
      "line_number": 28,
      "line_range": [
        28,
        29,
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b503_ssl_with_bad_defaults.html",
      "test_id": "B503",
      "test_name": "ssl_with_bad_defaults"
    },
    {
      "code": "30 \n31 def open_ssl_socket(version=SSL.SSLv23_METHOD):\n32     pass\n33 \n34 # this one will pass ok\n35 def open_ssl_socket(version=SSL.TLSv1_1_METHOD):\n",
      "filename": "examples/ssl-insecure-version.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Function definition identified with insecure SSL/TLS protocol version by default, possible security issue.",
      "line_number": 31,
      "line_range": [
        31,
        32,
        33,
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b503_ssl_with_bad_defaults.html",
      "test_id": "B503",
      "test_name": "ssl_with_bad_defaults"
    },
    {
      "code": "1 import subprocess\n2 from subprocess import Popen as pop\n3 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "1 import subprocess\n2 from subprocess import Popen as pop\n3 \n4 \n5 def Popen(*args, **kwargs):\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with Popen module.",
      "line_number": 2,
      "line_range": [
        2,
        3,
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "10 \n11 pop('/bin/gcc --version', shell=True)\n12 Popen('/bin/gcc --version', shell=True)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "11 pop('/bin/gcc --version', shell=True)\n12 Popen('/bin/gcc --version', shell=True)\n13 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Function call with shell=True parameter identified, possible security issue.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b604_any_other_function_with_shell_equals_true.html",
      "test_id": "B604",
      "test_name": "any_other_function_with_shell_equals_true"
    },
    {
      "code": "13 \n14 subprocess.Popen('/bin/gcc --version', shell=True)\n15 subprocess.Popen(['/bin/gcc', '--version'], shell=False)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 14,
      "line_range": [
        14
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "14 subprocess.Popen('/bin/gcc --version', shell=True)\n15 subprocess.Popen(['/bin/gcc', '--version'], shell=False)\n16 subprocess.Popen(['/bin/gcc', '--version'])\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "15 subprocess.Popen(['/bin/gcc', '--version'], shell=False)\n16 subprocess.Popen(['/bin/gcc', '--version'])\n17 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "17 \n18 subprocess.call([\"/bin/ls\",\n19                  \"-l\"\n20                  ])\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 18,
      "line_range": [
        18,
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "20                  ])\n21 subprocess.call('/bin/ls -l', shell=True)\n22 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "22 \n23 subprocess.check_call(['/bin/ls', '-l'], shell=False)\n24 subprocess.check_call('/bin/ls -l', shell=True)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "23 subprocess.check_call(['/bin/ls', '-l'], shell=False)\n24 subprocess.check_call('/bin/ls -l', shell=True)\n25 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "25 \n26 subprocess.check_output(['/bin/ls', '-l'])\n27 subprocess.check_output('/bin/ls -l', shell=True)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 26,
      "line_range": [
        26
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "26 subprocess.check_output(['/bin/ls', '-l'])\n27 subprocess.check_output('/bin/ls -l', shell=True)\n28 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "28 \n29 subprocess.run(['/bin/ls', '-l'])\n30 subprocess.run('/bin/ls -l', shell=True)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "29 subprocess.run(['/bin/ls', '-l'])\n30 subprocess.run('/bin/ls -l', shell=True)\n31 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "31 \n32 subprocess.Popen('/bin/ls *', shell=True)\n33 subprocess.Popen('/bin/ls %s' % ('something',), shell=True)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "32 subprocess.Popen('/bin/ls *', shell=True)\n33 subprocess.Popen('/bin/ls %s' % ('something',), shell=True)\n34 subprocess.Popen('/bin/ls {}'.format('something'), shell=True)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 33,
      "line_range": [
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "33 subprocess.Popen('/bin/ls %s' % ('something',), shell=True)\n34 subprocess.Popen('/bin/ls {}'.format('something'), shell=True)\n35 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 34,
      "line_range": [
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "36 command = \"/bin/ls\" + unknown_function()\n37 subprocess.Popen(command, shell=True)\n38 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 37,
      "line_range": [
        37
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "38 \n39 subprocess.Popen('/bin/ls && cat /etc/passwd', shell=True)\n40 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 39,
      "line_range": [
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "41 command = 'pwd'\n42 subprocess.call(command, shell='True')\n43 subprocess.call(command, shell='False')\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 42,
      "line_range": [
        42
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "42 subprocess.call(command, shell='True')\n43 subprocess.call(command, shell='False')\n44 subprocess.call(command, shell='None')\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "43 subprocess.call(command, shell='False')\n44 subprocess.call(command, shell='None')\n45 subprocess.call(command, shell=1)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 44,
      "line_range": [
        44
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "44 subprocess.call(command, shell='None')\n45 subprocess.call(command, shell=1)\n46 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "46 \n47 subprocess.call(command, shell=Popen())\n48 subprocess.call(command, shell=[True])\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "47 subprocess.call(command, shell=Popen())\n48 subprocess.call(command, shell=[True])\n49 subprocess.call(command, shell={'IS': 'True'})\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "48 subprocess.call(command, shell=[True])\n49 subprocess.call(command, shell={'IS': 'True'})\n50 subprocess.call(command, shell=command)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 49,
      "line_range": [
        49
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "49 subprocess.call(command, shell={'IS': 'True'})\n50 subprocess.call(command, shell=command)\n51 \n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "subprocess call with shell=True identified, security issue.",
      "line_number": 50,
      "line_range": [
        50
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "51 \n52 subprocess.call(command, shell=False)\n53 subprocess.call(command, shell=0)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 52,
      "line_range": [
        52
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "52 subprocess.call(command, shell=False)\n53 subprocess.call(command, shell=0)\n54 subprocess.call(command, shell=[])\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "53 subprocess.call(command, shell=0)\n54 subprocess.call(command, shell=[])\n55 subprocess.call(command, shell={})\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "54 subprocess.call(command, shell=[])\n55 subprocess.call(command, shell={})\n56 subprocess.call(command, shell=None)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "55 subprocess.call(command, shell={})\n56 subprocess.call(command, shell=None)\n",
      "filename": "examples/subprocess_shell.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 56,
      "line_range": [
        56
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import telnetlib\n2 import getpass\n3 \n",
      "filename": "examples/telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "A telnet-related module is being imported.  Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b401-import-telnetlib",
      "test_id": "B401",
      "test_name": "blacklist"
    },
    {
      "code": "7 password = getpass.getpass()\n8 tn = telnetlib.Telnet(host)\n9 \n",
      "filename": "examples/telnetlib.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b312-telnetlib",
      "test_id": "B312",
      "test_name": "blacklist"
    },
    {
      "code": "4 \n5 os.tmpnam()\n6 \n",
      "filename": "examples/tempnam.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of os.tempnam() and os.tmpnam() is vulnerable to symlink attacks. Consider using tmpfile() instead.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b325-tempnam",
      "test_id": "B325",
      "test_name": "blacklist"
    },
    {
      "code": "6 \n7 tmpnam()\n8 \n",
      "filename": "examples/tempnam.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of os.tempnam() and os.tmpnam() is vulnerable to symlink attacks. Consider using tmpfile() instead.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b325-tempnam",
      "test_id": "B325",
      "test_name": "blacklist"
    },
    {
      "code": "8 \n9 os.tempnam('dir1')\n10 os.tempnam('dir1', 'prefix1')\n",
      "filename": "examples/tempnam.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of os.tempnam() and os.tmpnam() is vulnerable to symlink attacks. Consider using tmpfile() instead.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b325-tempnam",
      "test_id": "B325",
      "test_name": "blacklist"
    },
    {
      "code": "9 os.tempnam('dir1')\n10 os.tempnam('dir1', 'prefix1')\n11 \n",
      "filename": "examples/tempnam.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of os.tempnam() and os.tmpnam() is vulnerable to symlink attacks. Consider using tmpfile() instead.",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b325-tempnam",
      "test_id": "B325",
      "test_name": "blacklist"
    },
    {
      "code": "11 \n12 tempnam('dir1')\n13 tempnam('dir1', 'prefix1')\n",
      "filename": "examples/tempnam.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of os.tempnam() and os.tmpnam() is vulnerable to symlink attacks. Consider using tmpfile() instead.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b325-tempnam",
      "test_id": "B325",
      "test_name": "blacklist"
    },
    {
      "code": "12 tempnam('dir1')\n13 tempnam('dir1', 'prefix1')\n",
      "filename": "examples/tempnam.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of os.tempnam() and os.tmpnam() is vulnerable to symlink attacks. Consider using tmpfile() instead.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b325-tempnam",
      "test_id": "B325",
      "test_name": "blacklist"
    },
    {
      "code": "4         a = i\n5     except:\n6         continue\n",
      "filename": "examples/try_except_continue.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "12         a = 1\n13     except Exception:\n14         continue\n",
      "filename": "examples/try_except_continue.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "3     a = 1\n4 except:\n5     pass\n",
      "filename": "examples/try_except_pass.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "10     a = 1\n11 except Exception:\n12     pass\n",
      "filename": "examples/try_except_pass.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "6 # Incorrect: unverified context\n7 context = ssl._create_unverified_context()\n",
      "filename": "examples/unverified_context.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "By default, Python will create a secure, verified ssl context for use in such classes as HTTPSConnection. However, it still allows using an insecure context via the _create_unverified_context that reverts to the previous behavior that does not validate certificates or perform hostname checks.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b323-unverified-context",
      "test_id": "B323",
      "test_name": "blacklist"
    },
    {
      "code": "21     url = urllib.quote('file:///bin/ls')\n22     urllib.urlopen(url, 'blah', 32)\n23     urllib.urlretrieve('file:///bin/ls', '/bin/ls2')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "22     urllib.urlopen(url, 'blah', 32)\n23     urllib.urlretrieve('file:///bin/ls', '/bin/ls2')\n24     opener = urllib.URLopener()\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "23     urllib.urlretrieve('file:///bin/ls', '/bin/ls2')\n24     opener = urllib.URLopener()\n25     opener.open('file:///bin/ls')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "26     opener.retrieve('file:///bin/ls')\n27     opener = urllib.FancyURLopener()\n28     opener.open('file:///bin/ls')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "37     urllib2.install_opener(opener)\n38     urllib2.urlopen('file:///bin/ls')\n39     urllib2.Request('file:///bin/ls')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 38,
      "line_range": [
        38
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "38     urllib2.urlopen('file:///bin/ls')\n39     urllib2.Request('file:///bin/ls')\n40 \n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 39,
      "line_range": [
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "41     # Python 3\n42     urllib.request.urlopen('file:///bin/ls')\n43     urllib.request.urlretrieve('file:///bin/ls', '/bin/ls2')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 42,
      "line_range": [
        42
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "42     urllib.request.urlopen('file:///bin/ls')\n43     urllib.request.urlretrieve('file:///bin/ls', '/bin/ls2')\n44     opener = urllib.request.URLopener()\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 43,
      "line_range": [
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "43     urllib.request.urlretrieve('file:///bin/ls', '/bin/ls2')\n44     opener = urllib.request.URLopener()\n45     opener.open('file:///bin/ls')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 44,
      "line_range": [
        44
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "46     opener.retrieve('file:///bin/ls')\n47     opener = urllib.request.FancyURLopener()\n48     opener.open('file:///bin/ls')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "51     # Six\n52     six.moves.urllib.request.urlopen('file:///bin/ls')\n53     six.moves.urllib.request.urlretrieve('file:///bin/ls', '/bin/ls2')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 52,
      "line_range": [
        52
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "52     six.moves.urllib.request.urlopen('file:///bin/ls')\n53     six.moves.urllib.request.urlretrieve('file:///bin/ls', '/bin/ls2')\n54     opener = six.moves.urllib.request.URLopener()\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 53,
      "line_range": [
        53
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "53     six.moves.urllib.request.urlretrieve('file:///bin/ls', '/bin/ls2')\n54     opener = six.moves.urllib.request.URLopener()\n55     opener.open('file:///bin/ls')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 54,
      "line_range": [
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "56     opener.retrieve('file:///bin/ls')\n57     opener = six.moves.urllib.request.FancyURLopener()\n58     opener.open('file:///bin/ls')\n",
      "filename": "examples/urlopen.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
      "line_number": 57,
      "line_range": [
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen",
      "test_id": "B310",
      "test_name": "blacklist"
    },
    {
      "code": "4 from cryptography.hazmat.primitives.asymmetric import rsa\n5 from Crypto.PublicKey import DSA as pycrypto_dsa\n6 from Crypto.PublicKey import RSA as pycrypto_rsa\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module DSA are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "5 from Crypto.PublicKey import DSA as pycrypto_dsa\n6 from Crypto.PublicKey import RSA as pycrypto_rsa\n7 from Cryptodome.PublicKey import DSA as pycryptodomex_dsa\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pyCrypto library and its module RSA are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b413-import-pycrypto",
      "test_id": "B413",
      "test_name": "blacklist"
    },
    {
      "code": "6 from Crypto.PublicKey import RSA as pycrypto_rsa\n7 from Cryptodome.PublicKey import DSA as pycryptodomex_dsa\n8 from Cryptodome.PublicKey import RSA as pycryptodomex_rsa\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "7 from Cryptodome.PublicKey import DSA as pycryptodomex_dsa\n8 from Cryptodome.PublicKey import RSA as pycryptodomex_rsa\n9 \n10 \n11 # Correct\n12 dsa.generate_private_key(key_size=2048,\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "The pycryptodome library is not considered a secure alternative to pycrypto.Consider using pyca/cryptography library.",
      "line_number": 8,
      "line_range": [
        8,
        9,
        10,
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b414-import-pycryptodome",
      "test_id": "B414",
      "test_name": "blacklist"
    },
    {
      "code": "37 # Incorrect: weak key sizes\n38 dsa.generate_private_key(key_size=1024,\n39                          backend=backends.default_backend())\n40 ec.generate_private_key(curve=ec.SECT163R2,\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "DSA key sizes below 2048 bits are considered breakable. ",
      "line_number": 38,
      "line_range": [
        38,
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "39                          backend=backends.default_backend())\n40 ec.generate_private_key(curve=ec.SECT163R2,\n41                         backend=backends.default_backend())\n42 rsa.generate_private_key(public_exponent=65537,\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "EC key sizes below 224 bits are considered breakable. ",
      "line_number": 40,
      "line_range": [
        40,
        41
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "41                         backend=backends.default_backend())\n42 rsa.generate_private_key(public_exponent=65537,\n43                          key_size=1024,\n44                          backend=backends.default_backend())\n45 pycrypto_dsa.generate(bits=1024)\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "RSA key sizes below 2048 bits are considered breakable. ",
      "line_number": 42,
      "line_range": [
        42,
        43,
        44
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "44                          backend=backends.default_backend())\n45 pycrypto_dsa.generate(bits=1024)\n46 pycrypto_rsa.generate(bits=1024)\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "DSA key sizes below 2048 bits are considered breakable. ",
      "line_number": 45,
      "line_range": [
        45
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "45 pycrypto_dsa.generate(bits=1024)\n46 pycrypto_rsa.generate(bits=1024)\n47 pycryptodomex_dsa.generate(bits=1024)\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "RSA key sizes below 2048 bits are considered breakable. ",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "46 pycrypto_rsa.generate(bits=1024)\n47 pycryptodomex_dsa.generate(bits=1024)\n48 pycryptodomex_rsa.generate(bits=1024)\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "DSA key sizes below 2048 bits are considered breakable. ",
      "line_number": 47,
      "line_range": [
        47
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "47 pycryptodomex_dsa.generate(bits=1024)\n48 pycryptodomex_rsa.generate(bits=1024)\n49 \n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "RSA key sizes below 2048 bits are considered breakable. ",
      "line_number": 48,
      "line_range": [
        48
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "50 # Also incorrect: without keyword args\n51 dsa.generate_private_key(512,\n52                          backends.default_backend())\n53 ec.generate_private_key(ec.SECT163R2,\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "DSA key sizes below 1024 bits are considered breakable. ",
      "line_number": 51,
      "line_range": [
        51,
        52
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "52                          backends.default_backend())\n53 ec.generate_private_key(ec.SECT163R2,\n54                         backends.default_backend())\n55 rsa.generate_private_key(3,\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "EC key sizes below 224 bits are considered breakable. ",
      "line_number": 53,
      "line_range": [
        53,
        54
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "54                         backends.default_backend())\n55 rsa.generate_private_key(3,\n56                          512,\n57                          backends.default_backend())\n58 pycrypto_dsa.generate(512)\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "RSA key sizes below 1024 bits are considered breakable. ",
      "line_number": 55,
      "line_range": [
        55,
        56,
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "57                          backends.default_backend())\n58 pycrypto_dsa.generate(512)\n59 pycrypto_rsa.generate(512)\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "DSA key sizes below 1024 bits are considered breakable. ",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "58 pycrypto_dsa.generate(512)\n59 pycrypto_rsa.generate(512)\n60 pycryptodomex_dsa.generate(512)\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "RSA key sizes below 1024 bits are considered breakable. ",
      "line_number": 59,
      "line_range": [
        59
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "59 pycrypto_rsa.generate(512)\n60 pycryptodomex_dsa.generate(512)\n61 pycryptodomex_rsa.generate(512)\n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "DSA key sizes below 1024 bits are considered breakable. ",
      "line_number": 60,
      "line_range": [
        60
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "60 pycryptodomex_dsa.generate(512)\n61 pycryptodomex_rsa.generate(512)\n62 \n",
      "filename": "examples/weak_cryptographic_key_sizes.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "RSA key sizes below 1024 bits are considered breakable. ",
      "line_number": 61,
      "line_range": [
        61
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b505_weak_cryptographic_key.html",
      "test_id": "B505",
      "test_name": "weak_cryptographic_key"
    },
    {
      "code": "1 import os as o\n2 import subprocess as subp\n3 \n4 # Vulnerable to wildcard injection\n5 o.system(\"/bin/tar xvzf *\")\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with subprocess module.",
      "line_number": 2,
      "line_range": [
        2,
        3,
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "4 # Vulnerable to wildcard injection\n5 o.system(\"/bin/tar xvzf *\")\n6 o.system('/bin/chown *')\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "4 # Vulnerable to wildcard injection\n5 o.system(\"/bin/tar xvzf *\")\n6 o.system('/bin/chown *')\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "Possible wildcard injection in call: os.system",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b609_linux_commands_wildcard_injection.html",
      "test_id": "B609",
      "test_name": "linux_commands_wildcard_injection"
    },
    {
      "code": "5 o.system(\"/bin/tar xvzf *\")\n6 o.system('/bin/chown *')\n7 o.popen2('/bin/chmod *')\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "5 o.system(\"/bin/tar xvzf *\")\n6 o.system('/bin/chown *')\n7 o.popen2('/bin/chmod *')\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "Possible wildcard injection in call: os.system",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b609_linux_commands_wildcard_injection.html",
      "test_id": "B609",
      "test_name": "linux_commands_wildcard_injection"
    },
    {
      "code": "6 o.system('/bin/chown *')\n7 o.popen2('/bin/chmod *')\n8 subp.Popen('/bin/chown *', shell=True)\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
      "test_id": "B605",
      "test_name": "start_process_with_a_shell"
    },
    {
      "code": "6 o.system('/bin/chown *')\n7 o.popen2('/bin/chmod *')\n8 subp.Popen('/bin/chown *', shell=True)\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "Possible wildcard injection in call: os.popen2",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b609_linux_commands_wildcard_injection.html",
      "test_id": "B609",
      "test_name": "linux_commands_wildcard_injection"
    },
    {
      "code": "7 o.popen2('/bin/chmod *')\n8 subp.Popen('/bin/chown *', shell=True)\n9 \n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
      "test_id": "B602",
      "test_name": "subprocess_popen_with_shell_equals_true"
    },
    {
      "code": "7 o.popen2('/bin/chmod *')\n8 subp.Popen('/bin/chown *', shell=True)\n9 \n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "HIGH",
      "issue_text": "Possible wildcard injection in call: subprocess.Popen",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b609_linux_commands_wildcard_injection.html",
      "test_id": "B609",
      "test_name": "linux_commands_wildcard_injection"
    },
    {
      "code": "10 # Not vulnerable to wildcard injection\n11 subp.Popen('/bin/rsync *')\n12 subp.Popen(\"/bin/chmod *\")\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "11 subp.Popen('/bin/rsync *')\n12 subp.Popen(\"/bin/chmod *\")\n13 subp.Popen(['/bin/chown', '*'])\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "12 subp.Popen(\"/bin/chmod *\")\n13 subp.Popen(['/bin/chown', '*'])\n14 subp.Popen([\"/bin/chmod\", sys.argv[1], \"*\"],\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "13 subp.Popen(['/bin/chown', '*'])\n14 subp.Popen([\"/bin/chmod\", sys.argv[1], \"*\"],\n15                  stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n16 o.spawnvp(os.P_WAIT, 'tar', ['tar', 'xvzf', '*'])\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 14,
      "line_range": [
        14,
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "15                  stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n16 o.spawnvp(os.P_WAIT, 'tar', ['tar', 'xvzf', '*'])\n",
      "filename": "examples/wildcard-injection.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Starting a process without a shell.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b606_start_process_with_no_shell.html",
      "test_id": "B606",
      "test_name": "start_process_with_no_shell"
    },
    {
      "code": "1 import xml.etree.cElementTree as badET\n2 import defusedxml.cElementTree as goodET\n3 \n",
      "filename": "examples/xml_etree_celementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.etree.cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "6 # unsafe\n7 tree = badET.fromstring(xmlString)\n8 print(tree)\n",
      "filename": "examples/xml_etree_celementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.cElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.cElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-celementtree",
      "test_id": "B313",
      "test_name": "blacklist"
    },
    {
      "code": "8 print(tree)\n9 badET.parse('filethatdoesntexist.xml')\n10 badET.iterparse('filethatdoesntexist.xml')\n",
      "filename": "examples/xml_etree_celementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.cElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.cElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-celementtree",
      "test_id": "B313",
      "test_name": "blacklist"
    },
    {
      "code": "9 badET.parse('filethatdoesntexist.xml')\n10 badET.iterparse('filethatdoesntexist.xml')\n11 a = badET.XMLParser()\n",
      "filename": "examples/xml_etree_celementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.cElementTree.iterparse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.cElementTree.iterparse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-celementtree",
      "test_id": "B313",
      "test_name": "blacklist"
    },
    {
      "code": "10 badET.iterparse('filethatdoesntexist.xml')\n11 a = badET.XMLParser()\n12 \n",
      "filename": "examples/xml_etree_celementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.cElementTree.XMLParser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.cElementTree.XMLParser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-celementtree",
      "test_id": "B313",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xml.etree.ElementTree as badET\n2 import defusedxml.ElementTree as goodET\n3 \n",
      "filename": "examples/xml_etree_elementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b405-import-xml-etree",
      "test_id": "B405",
      "test_name": "blacklist"
    },
    {
      "code": "6 # unsafe\n7 tree = badET.fromstring(xmlString)\n8 print(tree)\n",
      "filename": "examples/xml_etree_elementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree",
      "test_id": "B314",
      "test_name": "blacklist"
    },
    {
      "code": "8 print(tree)\n9 badET.parse('filethatdoesntexist.xml')\n10 badET.iterparse('filethatdoesntexist.xml')\n",
      "filename": "examples/xml_etree_elementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-elementtree",
      "test_id": "B314",
      "test_name": "blacklist"
    },
    {
      "code": "9 badET.parse('filethatdoesntexist.xml')\n10 badET.iterparse('filethatdoesntexist.xml')\n11 a = badET.XMLParser()\n",
      "filename": "examples/xml_etree_elementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.ElementTree.iterparse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.iterparse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-elementtree",
      "test_id": "B314",
      "test_name": "blacklist"
    },
    {
      "code": "10 badET.iterparse('filethatdoesntexist.xml')\n11 a = badET.XMLParser()\n12 \n",
      "filename": "examples/xml_etree_elementtree.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.etree.ElementTree.XMLParser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.XMLParser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-elementtree",
      "test_id": "B314",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xml.dom.expatbuilder as bad\n2 import defusedxml.expatbuilder as good\n3 \n",
      "filename": "examples/xml_expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.dom.expatbuilder to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.expatbuilder with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b407-import-xml-expat",
      "test_id": "B407",
      "test_name": "blacklist"
    },
    {
      "code": "3 \n4 bad.parse('filethatdoesntexist.xml')\n5 good.parse('filethatdoesntexist.xml')\n",
      "filename": "examples/xml_expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.expatbuilder.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.expatbuilder.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-expatbuilder",
      "test_id": "B316",
      "test_name": "blacklist"
    },
    {
      "code": "8 \n9 bad.parseString(xmlString)\n10 good.parseString(xmlString)\n",
      "filename": "examples/xml_expatbuilder.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.expatbuilder.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.expatbuilder.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-expatbuilder",
      "test_id": "B316",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xml.sax.expatreader as bad\n2 import defusedxml.expatreader as good\n3 \n",
      "filename": "examples/xml_expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.sax.expatreader to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "3 \n4 p = bad.create_parser()\n5 b = good.create_parser()\n",
      "filename": "examples/xml_expatreader.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.expatreader.create_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.expatreader.create_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-expatreader",
      "test_id": "B315",
      "test_name": "blacklist"
    },
    {
      "code": "1 import lxml.etree\n2 import lxml\n3 from lxml import etree\n",
      "filename": "examples/xml_lxml.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using lxml.etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree with the equivalent defusedxml package.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b410-import-lxml",
      "test_id": "B410",
      "test_name": "blacklist"
    },
    {
      "code": "1 import lxml.etree\n2 import lxml\n3 from lxml import etree\n",
      "filename": "examples/xml_lxml.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using lxml to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml with the equivalent defusedxml package.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b410-import-lxml",
      "test_id": "B410",
      "test_name": "blacklist"
    },
    {
      "code": "2 import lxml\n3 from lxml import etree\n4 from defusedxml.lxml import fromstring\n",
      "filename": "examples/xml_lxml.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b410-import-lxml",
      "test_id": "B410",
      "test_name": "blacklist"
    },
    {
      "code": "7 xmlString = \"<note>\\n<to>Tove</to>\\n<from>Jani</from>\\n<heading>Reminder</heading>\\n<body>Don't forget me this weekend!</body>\\n</note>\"\n8 root = lxml.etree.fromstring(xmlString)\n9 root = fromstring(xmlString)\n",
      "filename": "examples/xml_lxml.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using lxml.etree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree.fromstring with its defusedxml equivalent function.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-etree",
      "test_id": "B320",
      "test_name": "blacklist"
    },
    {
      "code": "1 from xml.dom.minidom import parseString as badParseString\n2 from defusedxml.minidom import parseString as goodParseString\n3 a = badParseString(\"<myxml>Some data some more data</myxml>\")\n",
      "filename": "examples/xml_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "2 from defusedxml.minidom import parseString as goodParseString\n3 a = badParseString(\"<myxml>Some data some more data</myxml>\")\n4 print(a)\n",
      "filename": "examples/xml_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "8 \n9 from xml.dom.minidom import parse as badParse\n10 from defusedxml.minidom import parse as goodParse\n",
      "filename": "examples/xml_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parse with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b408-import-xml-minidom",
      "test_id": "B408",
      "test_name": "blacklist"
    },
    {
      "code": "10 from defusedxml.minidom import parse as goodParse\n11 a = badParse(\"somfilethatdoesntexist.xml\")\n12 print(a)\n",
      "filename": "examples/xml_minidom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.minidom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-minidom",
      "test_id": "B318",
      "test_name": "blacklist"
    },
    {
      "code": "1 from xml.dom.pulldom import parseString as badParseString\n2 from defusedxml.pulldom import parseString as goodParseString\n3 a = badParseString(\"<myxml>Some data some more data</myxml>\")\n",
      "filename": "examples/xml_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b409-import-xml-pulldom",
      "test_id": "B409",
      "test_name": "blacklist"
    },
    {
      "code": "2 from defusedxml.pulldom import parseString as goodParseString\n3 a = badParseString(\"<myxml>Some data some more data</myxml>\")\n4 print(a)\n",
      "filename": "examples/xml_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "8 \n9 from xml.dom.pulldom import parse as badParse\n10 from defusedxml.pulldom import parse as goodParse\n",
      "filename": "examples/xml_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parse with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 9,
      "line_range": [
        9
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b409-import-xml-pulldom",
      "test_id": "B409",
      "test_name": "blacklist"
    },
    {
      "code": "10 from defusedxml.pulldom import parse as goodParse\n11 a = badParse(\"somfilethatdoesntexist.xml\")\n12 print(a)\n",
      "filename": "examples/xml_pulldom.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-pulldom",
      "test_id": "B319",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xml.sax\n2 from xml import sax\n3 import defusedxml.sax\n",
      "filename": "examples/xml_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using xml.sax to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xml.sax\n2 from xml import sax\n3 import defusedxml.sax\n",
      "filename": "examples/xml_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Using sax to parse untrusted XML data is known to be vulnerable to XML attacks. Replace sax with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b406-import-xml-sax",
      "test_id": "B406",
      "test_name": "blacklist"
    },
    {
      "code": "20     # bad\n21     xml.sax.parseString(xmlString, ExampleContentHandler())\n22     xml.sax.parse('notaxmlfilethatexists.xml', ExampleContentHandler())\n",
      "filename": "examples/xml_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 21,
      "line_range": [
        21
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "21     xml.sax.parseString(xmlString, ExampleContentHandler())\n22     xml.sax.parse('notaxmlfilethatexists.xml', ExampleContentHandler())\n23     sax.parseString(xmlString, ExampleContentHandler())\n",
      "filename": "examples/xml_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "22     xml.sax.parse('notaxmlfilethatexists.xml', ExampleContentHandler())\n23     sax.parseString(xmlString, ExampleContentHandler())\n24     sax.parse('notaxmlfilethatexists.xml', ExampleContentHandler)\n",
      "filename": "examples/xml_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "23     sax.parseString(xmlString, ExampleContentHandler())\n24     sax.parse('notaxmlfilethatexists.xml', ExampleContentHandler)\n25 \n",
      "filename": "examples/xml_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "29     # bad\n30     xml.sax.make_parser()\n31     sax.make_parser()\n",
      "filename": "examples/xml_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "30     xml.sax.make_parser()\n31     sax.make_parser()\n32     print('nothing')\n",
      "filename": "examples/xml_sax.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b313-b320-xml-bad-sax",
      "test_id": "B317",
      "test_name": "blacklist"
    },
    {
      "code": "1 import xmlrpclib\n2 from SimpleXMLRPCServer import SimpleXMLRPCServer\n3 \n",
      "filename": "examples/xml_xmlrpc.py",
      "issue_confidence": "HIGH",
      "issue_severity": "HIGH",
      "issue_text": "Using xmlrpclib to parse untrusted XML data is known to be vulnerable to XML attacks. Use defused.xmlrpc.monkey_patch() function to monkey-patch xmlrpclib and mitigate XML vulnerabilities.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b411-import-xmlrpclib",
      "test_id": "B411",
      "test_name": "blacklist"
    },
    {
      "code": "6     ystr = yaml.dump({'a': 1, 'b': 2, 'c': 3})\n7     y = yaml.load(ystr)\n8     yaml.dump(y)\n",
      "filename": "examples/yaml_load.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().",
      "line_number": 7,
      "line_range": [
        7
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b506_yaml_load.html",
      "test_id": "B506",
      "test_name": "yaml_load"
    }
  ]
}