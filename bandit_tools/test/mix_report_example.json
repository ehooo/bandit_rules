{
  "errors": [],
  "generated_at": "",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 15,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 18,
      "SEVERITY.UNDEFINED": 0,
      "loc": 45,
      "nosec": 1
    },
    "examples/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0
    },
    "examples/django_sql_injection_extra.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 11,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 11,
      "SEVERITY.UNDEFINED": 0,
      "loc": 25,
      "nosec": 1
    },
    "examples/django_sql_injection_raw.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 4,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0
    },
    "examples/eval.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "11 \n12 User.objects.filter(username='admin').extra(dict(could_be='insecure'))\n13 User.objects.filter(username='admin').extra(select=dict(could_be='insecure'))\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 12,
      "line_range": [
        12
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "12 User.objects.filter(username='admin').extra(dict(could_be='insecure'))\n13 User.objects.filter(username='admin').extra(select=dict(could_be='insecure'))\n14 query = '\"username\") AS \"username\", * FROM \"auth_user\" WHERE 1=1 OR \"username\"=? --'\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 13,
      "line_range": [
        13
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "14 query = '\"username\") AS \"username\", * FROM \"auth_user\" WHERE 1=1 OR \"username\"=? --'\n15 User.objects.filter(username='admin').extra(select={'test': query})\n16 User.objects.filter(username='admin').extra(select={'test': '%secure' % 'nos'})\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 15,
      "line_range": [
        15
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "15 User.objects.filter(username='admin').extra(select={'test': query})\n16 User.objects.filter(username='admin').extra(select={'test': '%secure' % 'nos'})\n17 User.objects.filter(username='admin').extra(select={'test': '{}secure'.format('nos')})\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 16,
      "line_range": [
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "16 User.objects.filter(username='admin').extra(select={'test': '%secure' % 'nos'})\n17 User.objects.filter(username='admin').extra(select={'test': '{}secure'.format('nos')})\n18 \n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 17,
      "line_range": [
        17
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "19 where_var = ['1=1) OR 1=1 AND (1=1']\n20 User.objects.filter(username='admin').extra(where=where_var)\n21 where_str = '1=1) OR 1=1 AND (1=1'\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "21 where_str = '1=1) OR 1=1 AND (1=1'\n22 User.objects.filter(username='admin').extra(where=[where_str])\n23 User.objects.filter(username='admin').extra(where=['%secure' % 'nos'])\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 22,
      "line_range": [
        22
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "22 User.objects.filter(username='admin').extra(where=[where_str])\n23 User.objects.filter(username='admin').extra(where=['%secure' % 'nos'])\n24 User.objects.filter(username='admin').extra(where=['{}secure'.format('no')])\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 23,
      "line_range": [
        23
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "23 User.objects.filter(username='admin').extra(where=['%secure' % 'nos'])\n24 User.objects.filter(username='admin').extra(where=['{}secure'.format('no')])\n25 \n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 24,
      "line_range": [
        24
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "26 tables_var = ['django_content_type\" WHERE \"auth_user\".\"username\"=\"admin']\n27 User.objects.all().extra(tables=tables_var).distinct()\n28 tables_str = 'django_content_type\" WHERE \"auth_user\".\"username\"=\"admin'\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 27,
      "line_range": [
        27
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "28 tables_str = 'django_content_type\" WHERE \"auth_user\".\"username\"=\"admin'\n29 User.objects.all().extra(tables=[tables_str]).distinct()\n",
      "filename": "examples/django_sql_injection_extra.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of extra potential SQL attack vector.",
      "line_number": 29,
      "line_range": [
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b610_django_extra_used.html",
      "test_id": "B610",
      "test_name": "django_extra_used"
    },
    {
      "code": "4 User.objects.annotate(val=RawSQL('secure', []))\n5 User.objects.annotate(val=RawSQL('%secure' % 'nos', []))\n6 User.objects.annotate(val=RawSQL('{}secure'.format('no'), []))\n",
      "filename": "examples/django_sql_injection_raw.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of RawSQL potential SQL attack vector.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
      "test_id": "B611",
      "test_name": "django_rawsql_used"
    },
    {
      "code": "5 User.objects.annotate(val=RawSQL('%secure' % 'nos', []))\n6 User.objects.annotate(val=RawSQL('{}secure'.format('no'), []))\n7 raw = '\"username\") AS \"val\" FROM \"auth_user\" WHERE \"username\"=\"admin\" --'\n",
      "filename": "examples/django_sql_injection_raw.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of RawSQL potential SQL attack vector.",
      "line_number": 6,
      "line_range": [
        6
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
      "test_id": "B611",
      "test_name": "django_rawsql_used"
    },
    {
      "code": "7 raw = '\"username\") AS \"val\" FROM \"auth_user\" WHERE \"username\"=\"admin\" --'\n8 User.objects.annotate(val=RawSQL(raw, []))\n9 raw = '\"username\") AS \"val\" FROM \"auth_user\"' \\\n",
      "filename": "examples/django_sql_injection_raw.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of RawSQL potential SQL attack vector.",
      "line_number": 8,
      "line_range": [
        8
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
      "test_id": "B611",
      "test_name": "django_rawsql_used"
    },
    {
      "code": "10       ' WHERE \"username\"=\"admin\" OR 1=%s --'\n11 User.objects.annotate(val=RawSQL(raw, [0]))\n",
      "filename": "examples/django_sql_injection_raw.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of RawSQL potential SQL attack vector.",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html",
      "test_id": "B611",
      "test_name": "django_rawsql_used"
    },
    {
      "code": "2 \n3 print(eval(\"1+1\"))\n4 print(eval(\"os.getcwd()\"))\n",
      "filename": "examples/eval.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 3,
      "line_range": [
        3
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "3 print(eval(\"1+1\"))\n4 print(eval(\"os.getcwd()\"))\n5 print(eval(\"os.chmod('%s', 0777)\" % 'test.txt'))\n",
      "filename": "examples/eval.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 4,
      "line_range": [
        4
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    },
    {
      "code": "4 print(eval(\"os.getcwd()\"))\n5 print(eval(\"os.chmod('%s', 0777)\" % 'test.txt'))\n6 \n",
      "filename": "examples/eval.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
      "test_id": "B307",
      "test_name": "blacklist"
    }
  ]
}
